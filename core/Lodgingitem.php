<?php
	/* Generated by Wixnit Class Builder 
	// Mar, 11/2020
	// Building class for Lodgingitem
	*/

	class Lodgingitem
	{
		public $Id = "";
		public $Created = 0;
		public $Room = "";
		public $Occupants = 0;
		public $Extraservices = array();
		public $Roomcategory = "";
		public $Guest = array();
		public $Subguest = array();
		public $Checkin = 0;
		public $Checkout = 0;
		public $Days = 0;
		public $Adult = 0;
		public $Children = 0;

        private $subscriber = null;

        function __construct(Subscriber $subscriber)
        {
            $this->subscriber = $subscriber;
        }

        public function Initialize($arg=null)
		{
			if($arg != null)
			{
				$db = $this->subscriber->GetDB();

				$res = $db->query("SELECT * FROM lodgingitem WHERE lodgingitemid='$arg'");

				if($res->num_rows > 0)
				{
					$row = $res->fetch_assoc();
				
					$this->Id = $row['lodgingitemid'];
					$this->Created = new WixDate($row['created']);
					$this->Room = new Room($this->subscriber);
					$this->Room->Initialize($row['room']);
					$this->Occupants = Convert::ToInt($row['occupants']);
					$this->Extraservices = [];

					$es = json_decode($row['extraservices']);

					for($i = 0; $i < count($es); $i++)
                    {
                        $extra = new Extraservice($this->subscriber);
                        $extra->Initialize($es[$i]);
                        array_push($this->Extraservices, $extra);
                    }


					$this->Roomcategory = new Roomcategory($this->subscriber);
					$this->Roomcategory->Initialize($row['roomcategory']);
					$this->Guest = new Guest(json_decode($row['guest']));
					$this->Subguest = [];

					$guest = json_decode($row['subguest']);
					for($i = 0; $i < count($guest); $i++)
                    {
                        $gu = new Subguest($this->subscriber);
                        $gu->Initialize($guest[$i]);
                        array_push($this->Guest, $gu);
                    }

					$this->Checkin = new WixDate($row['checkin']);
					$this->Checkout = new WixDate($row['checkout']);
					$this->Days = Convert::ToInt($row['days']);
					$this->Adult = Convert::ToInt($row['adult']);
					$this->Children = Convert::ToInt($row['children']);
				}
			}
		}

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$room = addslashes(is_a($this->Room, "Room") ? $this->Room->Id : $this->Room);
			$occupants = Convert::ToInt($this->Occupants);
			$extraservices = "[]";
			$roomcategory = addslashes(is_a($this->Roomcategory, "Roomcategory") ? $this->Roomcategory->Id : $this->Roomcategory);
			$guest = addslashes(json_encode(is_a($this->Guest, "Guest") ? $this->Guest->GetArray() : $this->Guest));
			$subguest = "[]";
			$checkin = Convert::ToInt($this->Checkin);
			$checkout = Convert::ToInt($this->Checkout);
			$days = Convert::ToInt($this->Days);
			$adult = Convert::ToInt($this->Adult);
			$children = Convert::ToInt($this->Children);

			$extra = [];
			for($i = 0; $i < count($this->Extraservices); $i++)
            {
                array_push($extra, is_a($this->Extraservices[$i], "Extraservice") ? $this->Extraservices[$i]->Id : $this->Extraservices[$i]);
            }
			$extraservices = json_encode($extra);


            $guest = [];
            for($i = 0; $i < count($this->Subguest); $i++)
            {
                array_push($guest, is_a($this->Subguest[$i], "Subguest") ? $this->Subguest[$i]->Id : $this->Subguest[$i]);
            }
            $subguest = json_encode($guest);



			if($res = $db->query("SELECT lodgingitemid FROM lodgingitem WHERE lodgingitemid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE lodgingitem SET room='$room',occupants='$occupants',extraservices='$extraservices',roomcategory='$roomcategory',guest='$guest',subguest='$subguest',checkin='$checkin',checkout='$checkout',days='$days',adult='$adult',children='$children' WHERE lodgingitemid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT lodgingitemid FROM lodgingitem WHERE lodgingitemid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO lodgingitem(lodgingitemid,created,room,occupants,extraservices,roomcategory,guest,subguest,checkin,checkout,days,adult,children) VALUES ('$id','$created','$room','$occupants','$extraservices','$roomcategory','$guest','$subguest','$checkin','$checkout','$days','$adult','$children')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM lodgingitem WHERE lodgingitemid='$id'");

			//Deleting Associated Objects
			/*n			$this->Room->Delete();

			$this->Extraservices->Delete();

			$this->Roomcategory->Delete();

			$this->Guest->Delete();

			$this->Subguest->Delete();
			*/
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM lodgingitem WHERE room LIKE '%$term%' OR occupants LIKE '%$term%' OR extraservices LIKE '%$term%' OR roomcategory LIKE '%$term%' OR guest LIKE '%$term%' OR subguest LIKE '%$term%' OR checkin LIKE '%$term%' OR checkout LIKE '%$term%' OR days LIKE '%$term%' OR adult LIKE '%$term%' OR children LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Lodgingitem($subscriber);
                $ret[$i]->Id = $row['lodgingitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Room = $row['room'];
                $ret[$i]->Occupants = Convert::ToInt($row['occupants']);
                $ret[$i]->Extraservices = json_decode($row['extraservices']);
                $ret[$i]->Roomcategory = $row['roomcategory'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Subguest = $row['subguest'];
                $ret[$i]->Checkin = new WixDate($row['checkin']);
                $ret[$i]->Checkout = new WixDate($row['checkout']);
                $ret[$i]->Days = Convert::ToInt($row['days']);
                $ret[$i]->Adult = Convert::ToInt($row['adult']);
                $ret[$i]->Children = Convert::ToInt($row['children']);
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='lodgingitemid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM lodgingitem WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Lodgingitem($subscriber);
                $ret[$i]->Id = $row['lodgingitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Room = $row['room'];
                $ret[$i]->Occupants = Convert::ToInt($row['occupants']);
                $ret[$i]->Extraservices = json_decode($row['extraservices']);
                $ret[$i]->Roomcategory = $row['roomcategory'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Subguest = $row['subguest'];
                $ret[$i]->Checkin = new WixDate($row['checkin']);
                $ret[$i]->Checkout = new WixDate($row['checkout']);
                $ret[$i]->Days = Convert::ToInt($row['days']);
                $ret[$i]->Adult = Convert::ToInt($row['adult']);
                $ret[$i]->Children = Convert::ToInt($row['children']);
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM lodgingitem ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Lodgingitem($subscriber);
                $ret[$i]->Id = $row['lodgingitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Room = $row['room'];
                $ret[$i]->Occupants = Convert::ToInt($row['occupants']);
                $ret[$i]->Extraservices = json_decode($row['extraservices']);
                $ret[$i]->Roomcategory = $row['roomcategory'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Subguest = $row['subguest'];
                $ret[$i]->Checkin = new WixDate($row['checkin']);
                $ret[$i]->Checkout = new WixDate($row['checkout']);
                $ret[$i]->Days = Convert::ToInt($row['days']);
                $ret[$i]->Adult = Convert::ToInt($row['adult']);
                $ret[$i]->Children = Convert::ToInt($row['children']);
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM lodgingitem");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Lodgingitem($subscriber);
				$ret[$i]->Id = $row['lodgingitemid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Room = $row['room'];
				$ret[$i]->Occupants = Convert::ToInt($row['occupants']);
				$ret[$i]->Extraservices = json_decode($row['extraservices']);
				$ret[$i]->Roomcategory = $row['roomcategory'];
				$ret[$i]->Guest = $row['guest'];
				$ret[$i]->Subguest = $row['subguest'];
				$ret[$i]->Checkin = new WixDate($row['checkin']);
				$ret[$i]->Checkout = new WixDate($row['checkout']);
				$ret[$i]->Days = Convert::ToInt($row['days']);
				$ret[$i]->Adult = Convert::ToInt($row['adult']);
				$ret[$i]->Children = Convert::ToInt($row['children']);
				$i++;
			}
			return $ret;
		}
	}
