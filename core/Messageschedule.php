<?php
	/* Generated by Wixnit Class Builder 
	// Feb, 03/2020
	// Building class for Messageschedule
	*/

	class Messageschedule
	{
		public $Id = "";
		public $Created = 0;
		public $Title = "";
		public $Message = "";
		public $Year = 0;
		public $Month = 0;
		public $Day = 0;
		public $Hour = 0;
		public $Minuet = 0;
		public $Guest = false;
		public $Customers = false;
		public $Staff = false;
		public $Subscribers = false;
		public $Contactus = false;
		public $Customlist = array();
		public $Contactlist = array();
		public $Meridian = "";
		public $Issystem = false;
		public $Continuous = false;
		public $Autodelete = false;
		public $Execcount = 0;
		public $Executed = 0;
		public $Completed = false;
		public $Schedule = "";

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
			$this->subscriber = $subscriber;
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM messageschedule WHERE messagescheduleid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['messagescheduleid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Title = $row['title'];
                    $this->Message = new Messagetemplate($this->subscriber);
                    $this->Message->Initialize($row['message']);
                    $this->Year = $row['year'];
                    $this->Month = $row['month'];
                    $this->Day = $row['day'];
                    $this->Hour = $row['hour'];
                    $this->Minuet = $row['minuet'];
                    $this->Guest = Convert::ToBool($row['guest']);
                    $this->Customers = Convert::ToBool($row['customers']);
                    $this->Staff = Convert::ToBool($row['staff']);
                    $this->Subscribers = Convert::ToBool($row['subscribers']);
                    $this->Contactus = Convert::ToBool($row['contactus']);
                    $this->Contactlist = json_decode($row['contactlist']);
                    $this->Meridian = $row['meridian'];
                    $this->Issystem = Convert::ToBool($row['issystem']);
                    $this->Continuous = Convert::ToBool($row['continuous']);
                    $this->Autodelete  = Convert::ToBool($row['autodelete']);
                    $this->Execcount = $row['execcount'];
                    $this->Executed = $row['executed'];
                    $this->Completed = Convert::ToBool($row['completed']);
                    $this->Schedule = new Schedule($this->subscriber);
                    $this->Schedule->Initialize($row['schedule']);

                    $this->Customlist = array();

                    $r = json_decode($row['customlist']);

                    for($i = 0; $i < count($r); $i++)
                    {
                        $this->Customlist[$i] = new Contactcollection($this->subscriber);
                        $this->Customlist[$i]->Initialize($r[$i]);
                    }
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$title = addslashes($this->Title);
			$message = addslashes(is_a($this->Message, "Messagetemplate") ? $this->Message->Id : $this->Message);
			$year = Convert::ToInt($this->Year);
			$month = Convert::ToInt($this->Month);
			$day = Convert::ToInt($this->Day);
			$hour = Convert::ToInt($this->Hour);
			$minuet = Convert::ToInt($this->Minuet);
			$guest = Convert::ToInt($this->Guest);
			$customers = Convert::ToInt($this->Customers);
			$staff = Convert::ToInt($this->Staff);
			$subscribers = Convert::ToInt($this->Subscribers);
			$contactus = Convert::ToInt($this->Contactus);
			$contactlist = addslashes(json_encode($this->Contactlist));
			$meridian = addslashes($this->Meridian);
			$issystem = Convert::ToInt($this->Issystem);
			$continuous = Convert::ToInt($this->Continuous);
			$autodelete  = Convert::ToInt($this->Autodelete );
			$execcount = Convert::ToInt($this->Execcount);
			$executed = Convert::ToInt($this->Executed);
			$completed = Convert::ToInt($this->Completed);
			$schedule = addslashes(is_a($this->Schedule, "Schedule") ? $this->Schedule->Id : $this->Schedule);

			$list = array();
			for($i = 0; $i < count($this->Customlist); $i++)
            {
                array_push($list, is_object($this->Customlist[$i]) ? $this->Customlist[$i]->Id : $this->Customlist[$i]);
            }
			$customlist = json_encode($list);

			if($res = $db->query("SELECT messagescheduleid FROM messageschedule WHERE messagescheduleid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE messageschedule SET title='$title',message='$message',year='$year',month='$month',day='$day',hour='$hour',minuet='$minuet',guest='$guest',customers='$customers',staff='$staff',subscribers='$subscribers',contactus='$contactus',customlist='$customlist',contactlist='$contactlist',meridian='$meridian',issystem='$issystem',continuous='$continuous',autodelete='$autodelete',execcount='$execcount',executed='$executed',completed='$completed',schedule='$schedule' WHERE messagescheduleid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT messagescheduleid FROM messageschedule WHERE messagescheduleid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO messageschedule(messagescheduleid,created,title,message,year,month,day,hour,minuet,guest,customers,staff,subscribers,contactus,customlist,contactlist,meridian,issystem,continuous,autodelete,execcount,executed,completed,schedule) VALUES ('$id','$created','$title','$message','$year','$month','$day','$hour','$minuet','$guest','$customers','$staff','$subscribers','$contactus','$customlist','$contactlist','$meridian','$issystem','$continuous','$autodelete','$execcount','$executed','$completed','$schedule')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM messageschedule WHERE messagescheduleid='$id'");

			//Deleting Associated Objects
			/*n			$this->Message->Delete();

			$this->Schedule->Delete();
			*/
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM messageschedule WHERE title LIKE '%$term%' OR message LIKE '%$term%' OR year LIKE '%$term%' OR month LIKE '%$term%' OR day LIKE '%$term%' OR hour LIKE '%$term%' OR minuet LIKE '%$term%' OR guest LIKE '%$term%' OR customers LIKE '%$term%' OR staff LIKE '%$term%' OR subscribers LIKE '%$term%' OR contactus LIKE '%$term%' OR customlist LIKE '%$term%' OR contactlist LIKE '%$term%' OR meridian LIKE '%$term%' OR issystem LIKE '%$term%' OR continuous LIKE '%$term%' OR autodelete  LIKE '%$term%' OR execcount LIKE '%$term%' OR executed LIKE '%$term%' OR completed LIKE '%$term%' OR schedule LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Messageschedule($subscriber);
                $ret[$i]->Id = $row['messagescheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Title = $row['title'];
                $ret[$i]->Message = new Messagetemplate($subscriber);
                $ret[$i]->Message->Initialize($row['message']);
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Minuet = $row['minuet'];
                $ret[$i]->Guest = Convert::ToBool($row['guest']);
                $ret[$i]->Customers = Convert::ToBool($row['customers']);
                $ret[$i]->Staff = Convert::ToBool($row['staff']);
                $ret[$i]->Subscribers = Convert::ToBool($row['subscribers']);
                $ret[$i]->Contactus = Convert::ToBool($row['contactus']);
                $ret[$i]->Customlist = json_decode($row['customlist']);
                $ret[$i]->Contactlist = json_decode($row['contactlist']);
                $ret[$i]->Meridian = $row['meridian'];
                $ret[$i]->Issystem = Convert::ToBool($row['issystem']);
                $ret[$i]->Continuous = Convert::ToBool($row['continuous']);
                $ret[$i]->Autodelete  = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Completed = Convert::ToBool($row['completed']);
                $ret[$i]->Schedule = new Schedule($subscriber);
                $ret[$i]->Schedule->Initialize($row['schedule']);
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='messagescheduleid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM messageschedule WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Messageschedule($subscriber);
                $ret[$i]->Id = $row['messagescheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Title = $row['title'];
                $ret[$i]->Message = new Messagetemplate($subscriber);
                $ret[$i]->Message->Initialize($row['message']);
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Minuet = $row['minuet'];
                $ret[$i]->Guest = Convert::ToBool($row['guest']);
                $ret[$i]->Customers = Convert::ToBool($row['customers']);
                $ret[$i]->Staff = Convert::ToBool($row['staff']);
                $ret[$i]->Subscribers = Convert::ToBool($row['subscribers']);
                $ret[$i]->Contactus = Convert::ToBool($row['contactus']);
                $ret[$i]->Customlist = json_decode($row['customlist']);
                $ret[$i]->Contactlist = json_decode($row['contactlist']);
                $ret[$i]->Meridian = $row['meridian'];
                $ret[$i]->Issystem = Convert::ToBool($row['issystem']);
                $ret[$i]->Continuous = Convert::ToBool($row['continuous']);
                $ret[$i]->Autodelete  = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Completed = Convert::ToBool($row['completed']);
                $ret[$i]->Schedule = new Schedule($subscriber);
                $ret[$i]->Schedule->Initialize($row['schedule']);
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM messageschedule ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Messageschedule($subscriber);
                $ret[$i]->Id = $row['messagescheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Title = $row['title'];
                $ret[$i]->Message = new Messagetemplate($subscriber);
                $ret[$i]->Message->Initialize($row['message']);
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Minuet = $row['minuet'];
                $ret[$i]->Guest = Convert::ToBool($row['guest']);
                $ret[$i]->Customers = Convert::ToBool($row['customers']);
                $ret[$i]->Staff = Convert::ToBool($row['staff']);
                $ret[$i]->Subscribers = Convert::ToBool($row['subscribers']);
                $ret[$i]->Contactus = Convert::ToBool($row['contactus']);
                $ret[$i]->Customlist = json_decode($row['customlist']);
                $ret[$i]->Contactlist = json_decode($row['contactlist']);
                $ret[$i]->Meridian = $row['meridian'];
                $ret[$i]->Issystem = Convert::ToBool($row['issystem']);
                $ret[$i]->Continuous = Convert::ToBool($row['continuous']);
                $ret[$i]->Autodelete  = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Completed = Convert::ToBool($row['completed']);
                $ret[$i]->Schedule = new Schedule($subscriber);
                $ret[$i]->Schedule->Initialize($row['schedule']);
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM messageschedule");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Messageschedule($subscriber);
				$ret[$i]->Id = $row['messagescheduleid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Title = $row['title'];
                $ret[$i]->Message = new Messagetemplate($subscriber);
                $ret[$i]->Message->Initialize($row['message']);
				$ret[$i]->Year = $row['year'];
				$ret[$i]->Month = $row['month'];
				$ret[$i]->Day = $row['day'];
				$ret[$i]->Hour = $row['hour'];
				$ret[$i]->Minuet = $row['minuet'];
				$ret[$i]->Guest = Convert::ToBool($row['guest']);
				$ret[$i]->Customers = Convert::ToBool($row['customers']);
				$ret[$i]->Staff = Convert::ToBool($row['staff']);
				$ret[$i]->Subscribers = Convert::ToBool($row['subscribers']);
				$ret[$i]->Contactus = Convert::ToBool($row['contactus']);
				$ret[$i]->Customlist = json_decode($row['customlist']);
				$ret[$i]->Contactlist = json_decode($row['contactlist']);
				$ret[$i]->Meridian = $row['meridian'];
				$ret[$i]->Issystem = Convert::ToBool($row['issystem']);
				$ret[$i]->Continuous = Convert::ToBool($row['continuous']);
				$ret[$i]->Autodelete  = Convert::ToBool($row['autodelete']);
				$ret[$i]->Execcount = $row['execcount'];
				$ret[$i]->Executed = $row['executed'];
				$ret[$i]->Completed = Convert::ToBool($row['completed']);
                $ret[$i]->Schedule = new Schedule($subscriber);
                $ret[$i]->Schedule->Initialize($row['schedule']);
				$i++;
			}
			return $ret;
		}

		//Hand crafted
        public static function SystemEvents(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM messageschedule WHERE issystem=1");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Messageschedule($subscriber);
                $ret[$i]->Id = $row['messagescheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Title = $row['title'];
                $ret[$i]->Message = new Messagetemplate($subscriber);
                $ret[$i]->Message->Initialize($row['message']);
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Minuet = $row['minuet'];
                $ret[$i]->Guest = Convert::ToBool($row['guest']);
                $ret[$i]->Customers = Convert::ToBool($row['customers']);
                $ret[$i]->Staff = Convert::ToBool($row['staff']);
                $ret[$i]->Subscribers = Convert::ToBool($row['subscribers']);
                $ret[$i]->Contactus = Convert::ToBool($row['contactus']);
                $ret[$i]->Customlist = json_decode($row['customlist']);
                $ret[$i]->Contactlist = json_decode($row['contactlist']);
                $ret[$i]->Meridian = $row['meridian'];
                $ret[$i]->Issystem = Convert::ToBool($row['issystem']);
                $ret[$i]->Continuous = Convert::ToBool($row['continuous']);
                $ret[$i]->Autodelete  = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Completed = Convert::ToBool($row['completed']);
                $ret[$i]->Schedule = new Schedule($subscriber);
                $ret[$i]->Schedule->Initialize($row['schedule']);
                $i++;
            }
            return $ret;
        }

        public static function UserEvents(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM messageschedule WHERE issystem=0");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Messageschedule($subscriber);
                $ret[$i]->Id = $row['messagescheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Title = $row['title'];
                $ret[$i]->Message = new Messagetemplate($subscriber);
                $ret[$i]->Message->Initialize($row['message']);
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Minuet = $row['minuet'];
                $ret[$i]->Guest = Convert::ToBool($row['guest']);
                $ret[$i]->Customers = Convert::ToBool($row['customers']);
                $ret[$i]->Staff = Convert::ToBool($row['staff']);
                $ret[$i]->Subscribers = Convert::ToBool($row['subscribers']);
                $ret[$i]->Contactus = Convert::ToBool($row['contactus']);
                $ret[$i]->Customlist = json_decode($row['customlist']);
                $ret[$i]->Contactlist = json_decode($row['contactlist']);
                $ret[$i]->Meridian = $row['meridian'];
                $ret[$i]->Issystem = Convert::ToBool($row['issystem']);
                $ret[$i]->Continuous = Convert::ToBool($row['continuous']);
                $ret[$i]->Autodelete  = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Completed = Convert::ToBool($row['completed']);
                $ret[$i]->Schedule = new Schedule($subscriber);
                $ret[$i]->Schedule->Initialize($row['schedule']);
                $i++;
            }
            return $ret;
        }


        public static function Completedsystemschedule(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = $db->query("SELECT id FROM messageschedule WHERE issystem=0 AND completed=1")->num_rows;
            $db->close();
            return $ret;
        }

        public static function Completeduserchedule(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = $db->query("SELECT id FROM messageschedule WHERE issystem=0 AND completed=1")->num_rows;
            $db->close();
            return $ret;
        }
	}

