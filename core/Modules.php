<?php
	/* Generated by Wixnit Class Builder 
	// Nov, 29/2019
	// Building class for Modules
	*/

	class Modules
	{
		public $Created = 0;
		public $Booking = false;
		public $Discount = false;
		public $Customers = false;
		public $Lodging = false;
		public $Kitchen = false;
		public $Bakery = false;
		public $Bar = false;
		public $Laundry = false;
		public $Contactus = false;
		public $Newsletter = false;
		public $Gallery = false;
		public $Team = false;
		public $Services = false;
		public $Facilities = false;
		public $Pagetext = false;
		public $Faq = false;
		public $Terms = false;
		public $Policy = false;
		public $Aboutus = false;
		public $Testimonials = false;

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
		    $this->subscriber = $subscriber;

			$db = $subscriber->GetDB();

			$res = $db->query("SELECT * FROM modules");

			if($res->num_rows > 0)
			{
				$row = $res->fetch_assoc();
			
				$this->Created = new WixDate($row['created']);
				$this->Booking = Convert::ToBool($row['booking']);
				$this->Discount = Convert::ToBool($row['discount']);
				$this->Customers = Convert::ToBool($row['customers']);
				$this->Lodging = Convert::ToBool($row['lodging']);
				$this->Kitchen = Convert::ToBool($row['kitchen']);
				$this->Bakery = Convert::ToBool($row['bakery']);
				$this->Bar = Convert::ToBool($row['bar']);
				$this->Laundry = Convert::ToBool($row['laundry']);
				$this->Contactus = Convert::ToBool($row['contactus']);
				$this->Newsletter = Convert::ToBool($row['newsletter']);
				$this->Gallery = Convert::ToBool($row['gallery']);
				$this->Team = Convert::ToBool($row['team']);
				$this->Services = Convert::ToBool($row['services']);
				$this->Facilities = Convert::ToBool($row['facilities']);
				$this->Pagetext = Convert::ToBool($row['pagetext']);
				$this->Faq = Convert::ToBool($row['faq']);
				$this->Terms = Convert::ToBool($row['terms']);
				$this->Policy = Convert::ToBool($row['policy']);
				$this->Aboutus = Convert::ToBool($row['aboutus']);
				$this->Testimonials = Convert::ToBool($row['testimonials']);
			}
			else
			{
				$this->Save();
			}
		}

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$created = time();
			$booking = Convert::ToInt($this->Booking);
			$discount = Convert::ToInt($this->Discount);
			$customers = Convert::ToInt($this->Customers);
			$lodging = Convert::ToInt($this->Lodging);
			$kitchen = Convert::ToInt($this->Kitchen);
			$bakery = Convert::ToInt($this->Bakery);
			$bar = Convert::ToInt($this->Bar);
			$laundry = Convert::ToInt($this->Laundry);
			$contactus = Convert::ToInt($this->Contactus);
			$newsletter = Convert::ToInt($this->Newsletter);
			$gallery = Convert::ToInt($this->Gallery);
			$team = Convert::ToInt($this->Team);
			$services = Convert::ToInt($this->Services);
			$facilities = Convert::ToInt($this->Facilities);
			$pagetext = Convert::ToInt($this->Pagetext);
			$faq = Convert::ToInt($this->Faq);
			$terms = Convert::ToInt($this->Terms);
			$policy = Convert::ToInt($this->Policy);
			$aboutus = Convert::ToInt($this->Aboutus);
			$testimonials = Convert::ToInt($this->Testimonials);

			if($res = $db->query("SELECT * FROM modules")->num_rows > 0)
			{
				$db->query("UPDATE modules SET booking='$booking',discount='$discount',customers='$customers',lodging='$lodging',kitchen='$kitchen',bakery='$bakery',bar='$bar',laundry='$laundry',contactus='$contactus',newsletter='$newsletter',gallery='$gallery',team='$team',services='$services',facilities='$facilities',pagetext='$pagetext',faq='$faq',terms='$terms',policy='$policy',aboutus='$aboutus',testimonials='$testimonials'");
			}
			else
			{
				$db->query("INSERT INTO modules(created,booking,discount,customers,lodging,kitchen,bakery,bar,laundry,contactus,newsletter,gallery,team,services,facilities,pagetext,faq,terms,policy,aboutus,testimonials) VALUES ('$created','$booking','$discount','$customers','$lodging','$kitchen','$bakery','$bar','$laundry','$contactus','$newsletter','$gallery','$team','$services','$facilities','$pagetext','$faq','$terms','$policy','$aboutus','$testimonials')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$db->query("DELETE FROM modules");
		}
	}
