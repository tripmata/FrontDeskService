<?php
	/* Generated by Wixnit Class Builder 
	// Aug, 19/2019
	// Building class for Newsletter
	*/

	class Newsletter
	{
		public $Id = "";
		public $Created = 0;
		public $Name = "";
		public $Surname = "";
		public $Email = "";
		public $Phone = "";
		
		private $subscriber = null;

		function __construct(Subscriber $sub)
		{
			$subscriber = $sub;
		}
		
		
		function Initialize($arg=null)
		{
			if($arg != null)
			{
				$db = $subscriber->GetDB();

				$res = $db->query("SELECT * FROM newsletter WHERE newsletterid='$arg'");

				if($res->num_rows > 0)
				{
					$row = $res->fetch_assoc();
				
					$this->Id = $row['newsletterid'];
					$this->Created = new WixDate($row['created']);
					$this->Name = $row['name'];
					$this->Surname = $row['surname'];
					$this->Email = $row['email'];
					$this->Phone = $row['phone'];
				}
			}
		}

		public function Save()
		{
			$db = $subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$name = addslashes($this->Name);
			$surname = addslashes($this->Surname);
			$email = addslashes($this->Email);
			$phone = addslashes($this->Phone);

			if($res = $db->query("SELECT newsletterid FROM newsletter WHERE newsletterid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE newsletter SET name='$name',surname='$surname',email='$email',phone='$phone' WHERE newsletterid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT newsletterid FROM newsletter WHERE newsletterid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO newsletter(newsletterid,created,name,surname,email,phone) VALUES ('$id','$created','$name','$surname','$email','$phone')");
			}
		}

		public function Delete()
		{
			$db = $subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM newsletter WHERE newsletterid='$id'");
		}

		public static function Search($term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT newsletterid FROM newsletter WHERE name LIKE '%$term%' OR surname LIKE '%$term%' OR email LIKE '%$term%' OR phone LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = $row['newsletterid'];
				$i++;
			}
			return Newsletter::GroupInitialize($ret);
		}

		public static function Filter($term='', $field='newsletterid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT newsletterid FROM newsletter WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = $row['newsletterid'];
				$i++;
			}
			return Newsletter::GroupInitialize($ret);
		}

		public static function Order($field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT newsletterid FROM newsletter ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = $row['newsletterid'];
				$i++;
			}
			return Newsletter::GroupInitialize($ret);
		}

		public static function GroupInitialize($array=null, $orderBy='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$query = "";

			if(is_array($array) === true)
			{
				if(count($array) == 0)
				{
					return $ret;
				}
				else
				{
					for($i = 0; $i < count($array); $i++)
					{
						if($query == "")
						{
							$query = " WHERE Newsletterid='".$array[$i]."'";
						}
						else
						{
							$query .= " OR Newsletterid ='".$array[$i]."'";
						}
					}
				}
			}
			$i = 0;
			$res = $db->query("SELECT * FROM newsletter".$query." ORDER BY ".$orderBy." ".$order);
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Newsletter();
				$ret[$i]->Id = $row['newsletterid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Name = $row['name'];
				$ret[$i]->Surname = $row['surname'];
				$ret[$i]->Email = $row['email'];
				$ret[$i]->Phone = $row['phone'];
				$i++;
			}
			return $ret;
		}
		
		
		// Hand crafted methods
		
		public static function Subscribe($customer, Subscriber $sub)
		{
			$email = is_a($customer, "Customer") ? $customer->Email : "";
			$phone = is_a($customer, "Customer") ? $customer->Phone : "";
			$name = is_a($customer, "Customer") ? $customer->Name : "";
			$surname = is_a($customer, "Customer") ? $customer->Surname : "";
			
			$email = is_string($customer) ? $customer : "";
			
			if($email != "")
			{
				$sub = new Newsletter($sub);
				$sub->Initialize($email);
				$sub->Name = $name;
				$sub->Email = $emai;
				$sub->Phone = $phone;
				$sub->Surname = $surname;
				$sub->Save();
				
				return true;
			}
			else
			{
				return false;
			}
		}
		
		public static function Unsubscribe()
		{
			
		}
	}
