<?php
	/* Generated by Wixnit Class Builder 
	// Feb, 19/2020
	// Building class for Pastrysettings
	*/

	class Pastrysettings
	{
		public $Receipttemplate = "";
		public $Papertype = "";
		public $Lowstockemail = "";
		public $Lowstockphone = "";
		public $Onlineorderphone = "";
		public $Receiptaddress = false;
		public $Receiptemail = false;
		public $Receiptlogo = false;
		public $Receiptsalutation = false;
		public $Cash = false;
		public $Pos = false;
		public $Online = false;
		public $Others = false;
		public $Refund = false;
		public $Compundtax = false;
		public $Salutation = "";

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
		    $this->subscriber = $subscriber;

			$db = $this->subscriber->GetDB();

			$res = $db->query("SELECT * FROM pastrysettings");

			if($res->num_rows > 0)
			{
				$row = $res->fetch_assoc();
			
				$this->Receipttemplate = $row['receipttemplate'];
				$this->Papertype = $row['papertype'];
				$this->Lowstockemail = $row['lowstockemail'];
				$this->Lowstockphone = $row['lowstockphone'];
				$this->Onlineorderphone = $row['onlineorderphone'];
				$this->Receiptaddress = Convert::ToBool($row['receiptaddress']);
				$this->Receiptemail = Convert::ToBool($row['receiptemail']);
				$this->Receiptlogo = Convert::ToBool($row['receiptlogo']);
				$this->Receiptsalutation = Convert::ToBool($row['receiptsalutation']);
				$this->Cash = Convert::ToBool($row['cash']);
				$this->Pos = Convert::ToBool($row['pos']);
				$this->Online = Convert::ToBool($row['online']);
				$this->Others = Convert::ToBool($row['others']);
				$this->Refund = Convert::ToBool($row['refund']);
				$this->Compundtax = Convert::ToBool($row['compundtax']);
				$this->Salutation = $row['salutation'];
			}
			else
			{
				$this->Save();
			}
		}

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$receipttemplate = addslashes($this->Receipttemplate);
			$papertype = addslashes($this->Papertype);
			$lowstockemail = addslashes($this->Lowstockemail);
			$lowstockphone = addslashes($this->Lowstockphone);
			$onlineorderphone = addslashes($this->Onlineorderphone);
			$receiptaddress = Convert::ToInt($this->Receiptaddress);
			$receiptemail = Convert::ToInt($this->Receiptemail);
			$receiptlogo = Convert::ToInt($this->Receiptlogo);
			$receiptsalutation = Convert::ToInt($this->Receiptsalutation);
			$cash = Convert::ToInt($this->Cash);
			$pos = Convert::ToInt($this->Pos);
			$online = Convert::ToInt($this->Online);
			$others = Convert::ToInt($this->Others);
			$refund = Convert::ToInt($this->Refund);
			$compundtax = Convert::ToInt($this->Compundtax);
			$salutation = addslashes($this->Salutation);

			if($res = $db->query("SELECT * FROM pastrysettings")->num_rows > 0)
			{
				$db->query("UPDATE pastrysettings SET receipttemplate='$receipttemplate',papertype='$papertype',lowstockemail='$lowstockemail',lowstockphone='$lowstockphone',onlineorderphone='$onlineorderphone',receiptaddress='$receiptaddress',receiptemail='$receiptemail',receiptlogo='$receiptlogo',receiptsalutation='$receiptsalutation',cash='$cash',pos='$pos',online='$online',others='$others',refund='$refund',compundtax='$compundtax',salutation='$salutation'");
			}
			else
			{
				$db->query("INSERT INTO pastrysettings(receipttemplate,papertype,lowstockemail,lowstockphone,onlineorderphone,receiptaddress,receiptemail,receiptlogo,receiptsalutation,cash,pos,online,others,refund,compundtax,salutation) VALUES ('$receipttemplate','$papertype','$lowstockemail','$lowstockphone','$onlineorderphone','$receiptaddress','$receiptemail','$receiptlogo','$receiptsalutation','$cash','$pos','$online','$others','$refund','$compundtax','$salutation')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$db->query("DELETE FROM pastrysettings");
		}
	}
