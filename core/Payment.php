<?php
	/* Generated by Wixnit Class Builder 
	// Mar, 12/2020
	// Building class for Payment
	*/

	class Payment
	{
		public $Id = "";
		public $Created = 0;
		public $User = "";
		public $Amount = 0;
		public $Method = "";
		public $Paytime = 0;
		public $Type = "";
		public $Transactionid = "";

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
			$this->subscriber = $subscriber;
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM payment WHERE paymentid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['paymentid'];
                    $this->Created = new WixDate($row['created']);
                    $this->User = new User($this->subscriber);
                    $this->User->Initialize($row['user']);
                    $this->Amount = doubleval($row['amount']);
                    $this->Method = $row['method'];
                    $this->Paytime = new WixDate($row['paytime']);
                    $this->Type = $row['type'];
                    $this->Transactionid = $row['transactionid'];
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$user = addslashes(is_a($this->User, "User") ? $this->User->Id : $this->User);
			$amount = doubleval($this->Amount);
			$method = addslashes($this->Method);
			$paytime = Convert::ToInt($this->Paytime);
			$type = addslashes($this->Type);
			$transactionid = addslashes($this->Transactionid);

			if($transactionid == "")
            {
                $transactionid = Random::GenerateId(16);
                while (($db->query("SELECT transactionid FROM payment WHERE transactionid='$transactionid'")->num_rows > 0))
                {
                    $transactionid = Random::GenerateId(16);
                }
                $this->Transactionid = $transactionid;
            }

			if($res = $db->query("SELECT paymentid FROM payment WHERE paymentid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE payment SET user='$user',amount='$amount',method='$method',paytime='$paytime',type='$type',transactionid='$transactionid' WHERE paymentid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT paymentid FROM payment WHERE paymentid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO payment(paymentid,created,user,amount,method,paytime,type,transactionid) VALUES ('$id','$created','$user','$amount','$method','$paytime','$type','$transactionid')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM payment WHERE paymentid='$id'");

			//Deleting Associated Objects
			/*n			$this->User->Delete();
			*/
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM payment WHERE user LIKE '%$term%' OR amount LIKE '%$term%' OR method LIKE '%$term%' OR paytime LIKE '%$term%' OR type LIKE '%$term%' OR transactionid LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Payment($subscriber);
                $ret[$i]->Id = $row['paymentid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->User = $row['user'];
                $ret[$i]->Amount = doubleval($row['amount']);
                $ret[$i]->Method = $row['method'];
                $ret[$i]->Paytime = new WixDate($row['paytime']);
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Transactionid = $row['transactionid'];
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='paymentid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM payment WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Payment($subscriber);
                $ret[$i]->Id = $row['paymentid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->User = $row['user'];
                $ret[$i]->Amount = doubleval($row['amount']);
                $ret[$i]->Method = $row['method'];
                $ret[$i]->Paytime = new WixDate($row['paytime']);
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Transactionid = $row['transactionid'];
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM payment ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Payment($subscriber);
                $ret[$i]->Id = $row['paymentid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->User = $row['user'];
                $ret[$i]->Amount = doubleval($row['amount']);
                $ret[$i]->Method = $row['method'];
                $ret[$i]->Paytime = new WixDate($row['paytime']);
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Transactionid = $row['transactionid'];
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM payment");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Payment($subscriber);
				$ret[$i]->Id = $row['paymentid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->User = $row['user'];
				$ret[$i]->Amount = doubleval($row['amount']);
				$ret[$i]->Method = $row['method'];
				$ret[$i]->Paytime = new WixDate($row['paytime']);
				$ret[$i]->Type = $row['type'];
				$ret[$i]->Transactionid = $row['transactionid'];
				$i++;
			}
			return $ret;
		}
	}
