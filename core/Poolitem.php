<?php
	/* Generated by Wixnit Class Builder 
	// Feb, 09/2020
	// Building class for Poolitem
	*/

	class Poolitem
	{
		public $Id = "";
		public $Created = 0;
		public $Image = "";
		public $Name = "";
		public $Unit = "";
		public $Pluralunit = "";
		public $Sku = "";
		public $Productid = "";
		public $Lowstockpoint = 0;
		public $Stock = 0;
		public $Openingstock = 0;
		public $Suppliers = array();
		public $Creator = null;

		public $Type = "pool_item";
		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
			$this->subscriber = $subscriber;
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM poolitem WHERE poolitemid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['poolitemid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Image = $row['image'];
                    $this->Name = $row['name'];
                    $this->Unit = $row['unit'];
                    $this->Pluralunit = $row['pluralunit'];
                    $this->Sku = $row['sku'];
                    $this->Productid = $row['productid'];
                    $this->Lowstockpoint = $row['lowstockpoint'];
                    $this->Stock = $row['stock'];
                    $this->Openingstock = $row['openingstock'];
                    $this->Suppliers = json_decode($row['suppliers']);
                    $this->Creator = $row['creator'];

                    //hand added
                    $this->SetSuppliers($this->Suppliers);
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$image = addslashes($this->Image);
			$name = addslashes($this->Name);
			$unit = addslashes($this->Unit);
			$pluralunit = addslashes($this->Pluralunit);
			$sku = addslashes($this->Sku);
			$productid = addslashes($this->Productid);
			$lowstockpoint = Convert::ToInt($this->Lowstockpoint);
			$stock = Convert::ToInt($this->Stock);
			$openingstock = Convert::ToInt($this->Openingstock);
			$suppliers = "[]";
			$creator = addslashes(is_a($this->Creator, "User") ? $this->Creator->Id : $this->Creator);

            $sup = [];
            for($i = 0; $i < count($this->Suppliers); $i++)
            {
                if(is_a($this->Suppliers[$i], "Supplier"))
                {
                    array_push($sup, $this->Suppliers[$i]->Id);
                }
                else
                {
                    array_push($sup, $this->Suppliers[$i]);
                }
            }
            $suppliers = json_encode($sup);

			if($res = $db->query("SELECT poolitemid FROM poolitem WHERE poolitemid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE poolitem SET image='$image',name='$name',unit='$unit',pluralunit='$pluralunit',sku='$sku',productid='$productid',lowstockpoint='$lowstockpoint',stock='$stock',openingstock='$openingstock',suppliers='$suppliers',creator='$creator' WHERE poolitemid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT poolitemid FROM poolitem WHERE poolitemid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO poolitem(poolitemid,created,image,name,unit,pluralunit,sku,productid,lowstockpoint,stock,openingstock,suppliers,creator) VALUES ('$id','$created','$image','$name','$unit','$pluralunit','$sku','$productid','$lowstockpoint','$stock','$openingstock','$suppliers','$creator')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM poolitem WHERE poolitemid='$id'");

			//Deleting Associated Objects
			/*
			$suppliers = $this->GetSuppliers();
			$suppliers->Delete();

			$creator = $this->GetCreator();
			$creator->Delete();
			*/
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolitem WHERE image LIKE '%$term%' OR name LIKE '%$term%' OR unit LIKE '%$term%' OR pluralunit LIKE '%$term%' OR sku LIKE '%$term%' OR productid LIKE '%$term%' OR lowstockpoint LIKE '%$term%' OR stock LIKE '%$term%' OR openingstock LIKE '%$term%' OR suppliers LIKE '%$term%' OR creator LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Poolitem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='poolitemid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolitem WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Poolitem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolitem ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Poolitem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolitem");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Poolitem($subscriber);
				$ret[$i]->Id = $row['poolitemid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Image = $row['image'];
				$ret[$i]->Name = $row['name'];
				$ret[$i]->Unit = $row['unit'];
				$ret[$i]->Pluralunit = $row['pluralunit'];
				$ret[$i]->Sku = $row['sku'];
				$ret[$i]->Productid = $row['productid'];
				$ret[$i]->Lowstockpoint = $row['lowstockpoint'];
				$ret[$i]->Stock = $row['stock'];
				$ret[$i]->Openingstock = $row['openingstock'];
				$ret[$i]->Suppliers = json_decode($row['suppliers']);
				$ret[$i]->Creator = $row['creator'];
				$i++;
			}
			return $ret;
		}

        public function GetSuppliers()
        {
            $ret = [];
            for($i = 0; $i < count($this->Suppliers); $i++)
            {
                if(is_a($this->Suppliers[$i], "Supplier"))
                {
                    $ret[$i] = $this->Suppliers[$i];
                }
                else
                {
                    $ret[$i] = new Supplier($this->Suppliers[$i]);
                }
            }
            return $ret;
        }

        public function GetCreator()
        {
            $ret = null;

            if(is_a($this->Creator, "User"))
            {
                $ret = $this->Creator;
            }
            else
            {
                $ret = new User($this->subscriber);
                $ret->Initialize($this->Creator);
            }
            return $ret;
        }

        public function SetSuppliers($suppliers)
        {
            $ret = $suppliers;

            if(is_array($suppliers))
            {
                for($i = 0; $i < count($suppliers); $i++)
                {
                    if(is_a($suppliers[$i], "Supplier"))
                    {
                        $ret[$i] = $suppliers[$i];
                    }
                    else
                    {
                        $ret[$i] = new Supplier($this->subscriber);
                        $ret[$i]->Initialize($suppliers[$i]);
                    }
                }
                $this->Suppliers = $ret;
            }
        }

        public function SetCreator($creator)
        {
            $this->Creator = is_a($creator, "User") ? $creator->Id : $creator;
        }


        //Hand crafted

        public static function BySKU(Subscriber $subscriber, $sku)
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM poolitem WHERE sku='$sku'");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Baritem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
                $i++;
            }
            return $ret;
        }

        public static function ByStockRange(Subscriber $subscriber, $start, $stop)
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM poolitem WHERE (stock >= $start) AND (stock <= $stop)");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Baritem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
                $i++;
            }
            return $ret;
        }

        public static function InStockItems(Subscriber $subscriber, $term="")
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM poolitem WHERE (name LIKE '%$term%' OR unit LIKE '%$term%' OR pluralunit LIKE '%$term%' OR sku LIKE '%$term%' OR stock LIKE '%$term%') AND stock > lowstockpoint");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Baritem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
                $i++;
            }
            return $ret;
        }

        public static function OutofStockItems(Subscriber $subscriber, $term="")
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM poolitem WHERE (name LIKE '%$term%' OR unit LIKE '%$term%' OR pluralunit LIKE '%$term%' OR sku LIKE '%$term%' OR stock LIKE '%$term%') AND stock<=0");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Baritem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
                $i++;
            }
            return $ret;
        }

        public static function LowStockItems(Subscriber $subscriber, $term="")
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM poolitem WHERE (name LIKE '%$term%' OR unit LIKE '%$term%' OR pluralunit LIKE '%$term%' OR sku LIKE '%$term%' OR stock LIKE '%$term%') AND (stock <= lowstockpoint) AND (stock > 0)");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Baritem($subscriber);
                $ret[$i]->Id = $row['poolitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Image = $row['image'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Unit = $row['unit'];
                $ret[$i]->Pluralunit = $row['pluralunit'];
                $ret[$i]->Sku = $row['sku'];
                $ret[$i]->Productid = $row['productid'];
                $ret[$i]->Lowstockpoint = $row['lowstockpoint'];
                $ret[$i]->Stock = $row['stock'];
                $ret[$i]->Openingstock = $row['openingstock'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Creator = $row['creator'];
                $i++;
            }
            return $ret;
        }


        public static function InStockItemsCount(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = $db->query("SELECT * FROM poolitem WHERE stock > lowstockpoint")->num_rows;
            $db->close();
            return $ret;
        }

        public static function OutofStockItemsCount(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = $db->query("SELECT * FROM poolitem WHERE stock<=0")->num_rows;
            $db->close();
            return $ret;
        }

        public static function LowStockItemsCount(Subscriber $subscriber)
        {
            $db = $subscriber->GetDB();
            $ret = $db->query("SELECT * FROM poolitem WHERE (stock <= lowstockpoint) AND (stock > 0)")->num_rows;
            $db->close();
            return $ret;
        }

        public static function ByProductid(Subscriber $subscriber, $productid)
        {
            $db = $subscriber->GetDB();
            $ret = null;

            $res = $db->query("SELECT * FROM poolitem WHERE productid='$productid'");
            if($res->num_rows > 0)
            {
                $row = $res->fetch_assoc();

                $ret = new Poolitem($subscriber);
                $ret->Id = $row['poolitemid'];
                $ret->Created = new WixDate($row['created']);
                $ret->Image = $row['image'];
                $ret->Name = $row['name'];
                $ret->Unit = $row['unit'];
                $ret->Pluralunit = $row['pluralunit'];
                $ret->Sku = $row['sku'];
                $ret->Productid = $row['productid'];
                $ret->Lowstockpoint = $row['lowstockpoint'];
                $ret->Stock = $row['stock'];
                $ret->Openingstock = $row['openingstock'];
                $ret->Suppliers = json_decode($row['suppliers']);
                $ret->Creator = $row['creator'];
            }
            return $ret;
        }
	}
