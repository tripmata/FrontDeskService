<?php
	/* Generated by Wixnit Class Builder 
	// Feb, 29/2020
	// Building class for Poolsale
	*/

	class Poolsale
	{
		public $Id = "";
		public $Created = 0;
		public $Total = 0;
		public $Discount = 0;
		public $Taxes = 0;
		public $Paidamount = 0;
		public $Paid = false;
		public $Hasstaff = false;
		public $Hasguest = false;
		public $Staff = "";
		public $Guest = "";
		public $Channel = "";
		public $Items = array();
		public $Coupons = array();
		public $Discounts = array();
		public $Itemcount = 0;

		public $Transactionid = "";
		public $Saletime = 0;
		public $User = "";

        private $subscriber = null;

        function __construct(Subscriber $subscriber)
        {
            $this->subscriber = $subscriber;
        }

        public function initialize($arg=null)
		{
			if($arg != null)
			{
				$db = $this->subscriber->GetDB();

				$res = $db->query("SELECT * FROM poolsale WHERE poolsaleid='$arg'");

				if($res->num_rows > 0)
				{
					$row = $res->fetch_assoc();
				
					$this->Id = $row['poolsaleid'];
					$this->Created = new WixDate($row['created']);
					$this->Total = $row['total'];
					$this->Discount = $row['discount'];
					$this->Taxes = $row['taxes'];
					$this->Paidamount = $row['paidamount'];
					$this->Paid = Convert::ToBool($row['paid']);
					$this->Hasstaff = Convert::ToBool($row['hasstaff']);
					$this->Hasguest = Convert::ToBool($row['hasguest']);
					$this->Staff = new Staff($this->subscriber);
					$this->Staff->Initialize($row['staff']);
					$this->Guest = new guest($this->subscriber);
					$this->Guest->Initialize($row['guest']);

                    if($this->Guest->Id == "")
                    {
                        $this->Guest = new Customer($this->subscriber);
                        $this->Guest->initialize($row['guest']);
                    }
					$this->Channel = $row['channel'];
					$this->Items = [];
					$this->User = new User($this->subscriber);
					$this->User->Initialize($row['user']);

					$items = json_decode($row['items']);

					for($i = 0; $i < count($items); $i++)
                    {
                        if(($items[$i] != "") && ($items[$i] != null))
                        {
                            $it = new Poolsaleitem($this->subscriber);
                            $it->Initialize($items[$i]);
                            array_push($this->Items, $it);
                        }
                    }

					$this->Coupons = [];

                    $coupons = json_decode($row['coupons']);

                    for($i = 0; $i < count($coupons); $i++)
                    {
                        if(($coupons[$i] != "") && ($coupons[$i] != null))
                        {
                            $cp = new Coupon($this->subscriber);
                            $cp->Initialize($coupons[$i]);
                            array_push($this->Coupons, $cp);
                        }
                    }


					$this->Discounts = [];

                    $discounts = json_decode($row['discounts']);

                    for($i = 0; $i < count($discounts); $i++)
                    {
                        if(($discounts[$i] != "") && ($discounts[$i] != null))
                        {
                            $dc = new Discount($this->subscriber);
                            $dc->Initialize($discounts[$i]);
                            array_push($this->Discounts, $dc);
                        }
                    }


					$this->Itemcount = $row['itemcount'];
					$this->Transactionid = $row['transactionid'];
					$this->Saletime = new WixDate($row['saletime']);
				}
			}
		}

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$total = floatval($this->Total);
			$discount = floatval($this->Discount);
			$taxes = floatval($this->Taxes);
			$paidamount = floatval($this->Paidamount);
			$paid = Convert::ToInt($this->Paid);
			$hasstaff = Convert::ToInt($this->Hasstaff);
			$hasguest = Convert::ToInt($this->Hasguest);
			$staff = addslashes(is_a($this->Staff, "Staff") ? $this->Staff->Id : $this->Staff);
            $guest = addslashes(is_a($this->Guest, "Guest") ? $this->Guest->Id : (is_a($this->Guest, "Customer") ? $this->Guest->Id : $this->Guest));
            $channel = addslashes($this->Channel);
			$items = "[]";
			$coupons = "[]";
			$discounts = "[]";
			$itemcount = Convert::ToInt($this->Itemcount);

			$user = addslashes(is_a($this->User, "User") ? $this->User->Id : $this->User);


			$it = [];
            for($i = 0; $i < count($this->Items); $i++)
            {
                array_push($it, is_a($this->Items[$i], "Poolsaleitem") ? $this->Items[$i]->Id : $this->Items[$i]);
            }
            $items = addslashes(json_encode($it));


            $cp = [];
            for($i = 0; $i < count($this->Coupons); $i++)
            {
                array_push($cp, is_a($this->Coupons[$i], "Coupon") ? $this->Coupons[$i]->Id : $this->Coupons[$i]);
            }
            $coupons = addslashes(json_encode($cp));


            $dc = [];
            for($i = 0; $i < count($this->Discounts); $i++)
            {
                array_push($dc, is_a($this->Discount[$i], "Discount") ? $this->Discounts[$i]->Id : $this->Discounts[$i]);
            }
            $discounts = addslashes(json_encode($dc));

			if($this->Transactionid === "")
            {
                $transid = strtoupper(Random::GenerateId(10));

                while($db->query("SELECT transactionid FROM poolsale WHERE transactionid='$transid'")->num_rows > 0)
                {
                    $transid = strtoupper(Random::GenerateId(10));
                }
                $this->Transactionid = $transid;
            }
			$transactionid = $this->Transactionid;
			$saletime = Convert::ToInt(is_a($this->Saletime, "WixDate") ? $this->Saletime->getValue() : $this->Saletime);

			if($res = $db->query("SELECT poolsaleid FROM poolsale WHERE poolsaleid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE poolsale SET total='$total',discount='$discount',taxes='$taxes',paidamount='$paidamount',paid='$paid',hasstaff='$hasstaff',hasguest='$hasguest',staff='$staff',guest='$guest',channel='$channel',items='$items',coupons='$coupons',discounts='$discounts',itemcount='$itemcount',transactionid='$transactionid',saletime='$saletime',user='$user' WHERE poolsaleid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT poolsaleid FROM poolsale WHERE poolsaleid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO poolsale(poolsaleid,created,total,discount,taxes,paidamount,paid,hasstaff,hasguest,staff,guest,channel,items,coupons,discounts,itemcount,transactionid,saletime,user) VALUES ('$id','$created','$total','$discount','$taxes','$paidamount','$paid','$hasstaff','$hasguest','$staff','$guest','$channel','$items','$coupons','$discounts','$itemcount','$transactionid','$saletime','$user')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM poolsale WHERE poolsaleid='$id'");

			//Deleting Associated Objects
			/*n			$this->Staff->Delete();

			$this->Guest->Delete();
			*/
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolsale WHERE total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR hasstaff LIKE '%$term%' OR hasguest LIKE '%$term%' OR staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='poolsaleid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolsale WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolsale ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM poolsale");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Poolsale($subscriber);
				$ret[$i]->Id = $row['poolsaleid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Total = $row['total'];
				$ret[$i]->Discount = $row['discount'];
				$ret[$i]->Taxes = $row['taxes'];
				$ret[$i]->Paidamount = $row['paidamount'];
				$ret[$i]->Paid = Convert::ToBool($row['paid']);
				$ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
				$ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
				$ret[$i]->Staff = $row['staff'];
				$ret[$i]->Guest = $row['guest'];
				$ret[$i]->Channel = $row['channel'];
				$ret[$i]->Items = json_decode($row['items']);
				$ret[$i]->Coupons = json_decode($row['coupons']);
				$ret[$i]->Discounts = json_decode($row['discounts']);
				$ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
				$i++;
			}
			return $ret;
		}

        public static function SearchByUser(Subscriber $subscriber, $user, $term='')
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $uid = is_a($user, "User") ? $user->Id : $user;

            $res = $db->query("SELECT * FROM poolsale WHERE user='$uid' AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR hasstaff LIKE '%$term%' OR hasguest LIKE '%$term%' OR staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
                $i++;
            }
            return $ret;
        }

        public static function SaleInPeriod(Subscriber $subscriber, Span $span, $user="*", $filter="*")
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $start = $span->Start;
            $stop = $span->Stop;

            $uid = is_a($user, "User") ? $user->Id : $user;
            $u = new User($subscriber);
            $u->Initialize($uid);

            $res = null;

            if ($filter == "staff")
            {
                if($u->Id == "")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND hasstaff=1 ORDER BY saletime DESC");
                }
                else
                {
                    $id = $u->Id;
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND hasstaff=1 ORDER BY saletime DESC");
                }
            }
            else if ($filter == "guest")
            {
                if($u->Id == "")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND hasguest=1 ORDER BY saletime DESC");
                }
                else
                {
                    $id = $u->Id;
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND hasguest=1 ORDER BY saletime DESC");
                }
            }
            else if($filter == "others")
            {
                if($u->Id == "")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                }
                else
                {
                    $id = $u->Id;
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                }
            }
            else
            {
                if($u->Id == "")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' ORDER BY saletime DESC");
                }
                else
                {
                    $id = $u->Id;
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' ORDER BY saletime DESC");
                }
            }

            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
                $i++;
            }
            return $ret;
        }

        public function transactionList()
        {
            $ret = [];
            $i = 0;

            $id = $this->Id;
            $db = $this->subscriber->GetDB();

            $res = $db->query("SELECT * FROM pooltransaction WHERE sale='$id'");

            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Pooltransaction($this->subscriber);
                $ret[$i]->Id = $row['pooltransactionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Sale = $row['sale'];
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Amount = doubleval($row['amount']);
                $ret[$i]->User = $row['user'];
                $ret[$i]->Text = $row['text'];
                $ret[$i]->Method = $row['method'];
                $ret[$i]->Paytime = new WixDate($row['paytime']);
                $i++;
            }
            return $ret;
        }

        public static function dailySalePlot(Subscriber $subscriber, Timespan $timespan, $factor="customer")
        {
            $start = $timespan->Start;
            $stop = $timespan->Stop;

            $dayspread = [];
            for($i = 0; $i < 24; $i++)
            {
                $dayspread[$i] = 0;
            }

            $sales = self::SaleInPeriod($subscriber, $timespan);

            for($i = 0; $i < count($sales); $i++)
            {
                if(strtolower($factor) == "customer")
                {
                    $dayspread[intval(date("H", $sales[$i]->Saletime->getValue()))] ++;
                }
                else
                {
                    $dayspread[intval(date("H", $sales[$i]->Saletime->getValue()))] += $sales[$i]->Itemcount;
                }
            }

            $ret = [];
            $days = ($timespan->Difference() / ((60 * 60) * 24))
            ;
            for($i = 0; $i < count($dayspread); $i++)
            {
                $data = new stdClass();
                $data->time = strval(($i < 10) ? "0".$i : $i).":00";
                $data->value = round($dayspread[$i] / $days);
                array_push($ret, $data);
            }

            if((strtotime(date("m/d/Y")) == $start) &&  ((strtotime(date("m/d/Y")) + ((60 * 60) * 24)) == $stop))
            {
                for($i = intval(date("H")); $i < count($dayspread); $i++)
                {
                    $ret[$i]->value = null;
                }
            }
            return $ret;
        }

        public static function sortItemSales(Subscriber $subscriber, $sales, $direction='DESC')
        {
            $d = [];

            for($i = 0; $i < count($sales); $i++)
            {
                for($j = 0; $j < count($sales[$i]->Items); $j++)
                {
                    $saleItems = new Poolsaleitem($subscriber);
                    $saleItems->Initialize($sales[$i]->Items[$j]);

                    if(isset($saleItems->Item->Id))
                    {
                        if($saleItems->Item->Id != "")
                        {
                            if(!isset($d[$saleItems->Item->Id]))
                            {
                                $d[$saleItems->Item->Id] = 0;
                            }
                            $d[$saleItems->Item->Id] += $saleItems->Quantity;
                        }
                    }
                }
            }

            if(strtolower($direction) == "desc")
            {
                arsort($d);
            }
            else
            {
                asort($d);
            }

            $keys = array_keys($d);

            $items = [];

            for($i = 0; $i < count($keys); $i++)
            {
                $it = new Pool($subscriber);
                $it->Initialize($keys[$i]);

                $dt = new stdClass();
                $dt->Item = $it;
                $dt->Quantity = $d[$keys[$i]];

                array_push($items, $dt);
            }

            return $items;
        }

        public static function sortItemSales2(Subscriber $subscriber, Timespan $timespan, $direction='DESC')
        {
            $start = $timespan->Start;
            $stop = $timespan->Stop;

            $db = $subscriber->GetDB();

            $res = $db->query("SELECT item, quantity FROM poolsaleitem WHERE Created >= '$start' AND created <= '$stop'");

            $d = [];

            while(($row = $res->fetch_assoc()))
            {
                if($row['item'] != "")
                {
                    if(!isset($d[$row['item']]))
                    {
                        $d[$row['item']] = 0;
                    }
                    $d[$row['item']] += intval($row['quantity']);
                }
            }

            if(strtolower($direction) == "desc")
            {
                arsort($d);
            }
            else
            {
                asort($d);
            }

            $keys = array_keys($d);

            $items = [];

            for($i = 0; $i < count($keys); $i++)
            {
                $it = new Pool($subscriber);
                $it->Initialize($keys[$i]);

                $dt = new stdClass();
                $dt->Item = $it;
                $dt->Quantity = $d[$keys[$i]];

                array_push($items, $dt);
            }

            return $items;
        }

        public static function FilterSpan(Subscriber $subscriber, Timespan $timespan, Span $span, $sale_span="*", $filter="*",  $user="*")
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $start = $timespan->Start;
            $stop = $timespan->Stop;

            $rangeStart = $span->Start;
            $rangeStop = $span->Stop;



            $uid = is_a($user, "User") ? $user->Id : $user;
            $u = new User($subscriber);
            $u->Initialize($uid);

            $res = null;

            if($sale_span == "items")
            {
                if($filter == "staff")
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasstaff=1 ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasstaff=1 ORDER BY saletime DESC");
                    }
                }
                else if($filter == "guest")
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=1 ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=1 ORDER BY saletime DESC");
                    }
                }
                else if($filter == "others")
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                    }
                }
                else
                {
                    if($filter == "staff")
                    {
                        if($u->Id == "")
                        {
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasstaff=1 ORDER BY saletime DESC");
                        }
                        else
                        {
                            $id = $u->Id;
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasstaff=1 ORDER BY saletime DESC");
                        }
                    }
                    else if($filter == "guest")
                    {
                        if($u->Id == "")
                        {
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=1 ORDER BY saletime DESC");
                        }
                        else
                        {
                            $id = $u->Id;
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=1 ORDER BY saletime DESC");
                        }
                    }
                    else if($filter == "others")
                    {
                        if($u->Id == "")
                        {
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                        }
                        else
                        {
                            $id = $u->Id;
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                        }
                    }
                    else
                    {
                        if($u->Id == "")
                        {
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' ORDER BY saletime DESC");
                        }
                        else
                        {
                            $id = $u->Id;
                            $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND itemcount >='$rangeStart' AND itemcount <= '$rangeStop' ORDER BY saletime DESC");
                        }
                    }
                }
            }
            else if($sale_span == "paid")
            {
                if($filter == "staff")
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' AND hasstaff=1 ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' AND hasstaff=1 ORDER BY saletime DESC");
                    }
                }
                else if($filter == "guest")
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' AND hasguest=1 ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' AND hasguest=1 ORDER BY saletime DESC");
                    }
                }
                else if($filter == "others")
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' AND hasguest=0 AND hasstaff=0 ORDER BY saletime DESC");
                    }
                }
                else
                {
                    if($u->Id == "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' ORDER BY saletime DESC");
                    }
                    else
                    {
                        $id = $u->Id;
                        $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' AND paidamount >='$rangeStart' AND paidamount <= '$rangeStop' ORDER BY saletime DESC");
                    }
                }
            }
            else
            {
                if($u->Id == "")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' ORDER BY saletime DESC");
                }
                else
                {
                    $id = $u->Id;
                    $res = $db->query("SELECT * FROM poolsale WHERE saletime>='$start' AND saletime<='$stop' AND user='$id' ORDER BY saletime DESC");
                }
            }

            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
                $i++;
            }
            return $ret;
        }

        public static function Searchspan(Subscriber $subscriber, $timespan, $term='', $filter="*", $user=null)
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $uid = is_a($user, "User") ? $user->Id : $user;
            $u = new User($subscriber);
            $u->Initialize($uid);

            $res = null;

            if(is_a($timespan, "Timespan"))
            {
                $start = $timespan->Start;
                $stop = $timespan->Stop;

                if($filter == "staff")
                {
                    if($u->Id != "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (hasstaff=1) AND (user='$uid' AND saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                    else
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (hasstaff=1) AND (saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                }
                else if($filter == "guest")
                {
                    if($u->Id != "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (hasguest=1) AND (user='$uid' AND saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                    else
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (hasguest=1) AND (saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                }
                else if($filter == "others")
                {
                    if($u->Id != "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (hasstaff=0 AND hasguest=0) AND (user='$uid' AND saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                    else
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (hasstaff=0 AND hasguest=0) AND (saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                }
                else
                {
                    if($u->Id != "")
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (user='$uid' AND saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                    else
                    {
                        $res = $db->query("SELECT * FROM poolsale WHERE (saletime >= '$start' AND saletime <= '$stop') AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                    }
                }
            }
            else
            {
                if($filter == "staff")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE (hasstaff = 1) AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                }
                else if($filter == "guest")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE (hasguest = 1) AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                }
                else if($filter == "others")
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE (hasstaff=0 AND hasguest=0) AND (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                }
                else
                {
                    $res = $db->query("SELECT * FROM poolsale WHERE (total LIKE '%$term%' OR discount LIKE '%$term%' OR taxes LIKE '%$term%' OR paidamount LIKE '%$term%' OR paid LIKE '%$term%' OR  staff LIKE '%$term%' OR guest LIKE '%$term%' OR channel LIKE '%$term%' OR items LIKE '%$term%' OR coupons LIKE '%$term%' OR discounts LIKE '%$term%' OR itemcount LIKE '%$term%' OR transactionid LIKE '%$term%') ORDER BY created DESC");
                }
            }


            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Poolsale($subscriber);
                $ret[$i]->Id = $row['poolsaleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Discount = $row['discount'];
                $ret[$i]->Taxes = $row['taxes'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Paid = Convert::ToBool($row['paid']);
                $ret[$i]->Hasstaff = Convert::ToBool($row['hasstaff']);
                $ret[$i]->Hasguest = Convert::ToBool($row['hasguest']);
                $ret[$i]->Staff = $row['staff'];
                $ret[$i]->Guest = $row['guest'];
                $ret[$i]->Channel = $row['channel'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Coupons = json_decode($row['coupons']);
                $ret[$i]->Discounts = json_decode($row['discounts']);
                $ret[$i]->Itemcount = $row['itemcount'];
                $ret[$i]->Transactionid = $row['transactionid'];
                $ret[$i]->Saletime = new WixDate($row['saletime']);
                $ret[$i]->User = $row['user'];
                $i++;
            }
            return $ret;
        }
	}
