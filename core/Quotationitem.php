<?php
	/* Generated by Wixnit Class Builder 
	// Feb, 13/2020
	// Building class for Quotationitem
	*/

	class Quotationitem
	{
		public $Id = "";
		public $Created = 0;
		public $Item = "";
		public $Suppliers = array();
		public $Pixel = array();
		public $Quotation = "";
		public $Quantity = 0;

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
			$this->subscriber = $subscriber;
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM quotationitem WHERE quotationitemid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['quotationitemid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Item = $row['item'];
                    $this->Suppliers = json_decode($row['suppliers']);

                    $this->Pixel = [];

                    $px = json_decode($row['pixel']);

                    for($i = 0; $i < count($px); $i++)
                    {
                        $this->Pixel[$i] = new QuotationPixel();
                        $this->Pixel[$i]->Supplier = $px[$i]->Supplier;
                        $this->Pixel[$i]->Price = $px[$i]->Price;
                        $this->Pixel[$i]->BuildPixel($this->subscriber);
                    }

                    $this->Quotation = $row['quotation'];
                    $this->Quantity = $row['quantity'];
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			for($i = 0; $i < count($this->Pixel); $i++)
            {
                if(is_a($this->Pixel[$i]->Supplier, "Supplier"))
                {
                    $this->Pixel[$i]->Supplier = $this->Pixel[$i]->Supplier->Id;
                }
            }

			$id = $this->Id;
			$created = time();
			$item = addslashes(is_string($this->Item) ? $this->Item : $this->Item->Id);
			$suppliers = addslashes(json_encode($this->Suppliers));
			$pixel = addslashes(json_encode($this->Pixel));
			$quotation = addslashes($this->Quotation);
			$quantity = floatval($this->Quantity);



			if($res = $db->query("SELECT quotationitemid FROM quotationitem WHERE quotationitemid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE quotationitem SET item='$item',suppliers='$suppliers',pixel='$pixel',quotation='$quotation',quantity='$quantity' WHERE quotationitemid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT quotationitemid FROM quotationitem WHERE quotationitemid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO quotationitem(quotationitemid,created,item,suppliers,pixel,quotation,quantity) VALUES ('$id','$created','$item','$suppliers','$pixel','$quotation','$quantity')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM quotationitem WHERE quotationitemid='$id'");
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM quotationitem WHERE item LIKE '%$term%' OR suppliers LIKE '%$term%' OR pixel LIKE '%$term%' OR quotation LIKE '%$term%' OR quantity LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Quotationitem($subscriber);
                $ret[$i]->Id = $row['quotationitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Item = $row['item'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Pixel = json_decode($row['pixel']);
                $ret[$i]->Quotation = $row['quotation'];
                $ret[$i]->Quantity = $row['quantity'];
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='quotationitemid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM quotationitem WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Quotationitem($subscriber);
                $ret[$i]->Id = $row['quotationitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Item = $row['item'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Pixel = json_decode($row['pixel']);
                $ret[$i]->Quotation = $row['quotation'];
                $ret[$i]->Quantity = $row['quantity'];
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT quotationitemid FROM quotationitem ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Quotationitem($subscriber);
                $ret[$i]->Id = $row['quotationitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Item = $row['item'];
                $ret[$i]->Suppliers = json_decode($row['suppliers']);
                $ret[$i]->Pixel = json_decode($row['pixel']);
                $ret[$i]->Quotation = $row['quotation'];
                $ret[$i]->Quantity = $row['quantity'];
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM quotationitem");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Quotationitem($subscriber);
				$ret[$i]->Id = $row['quotationitemid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Item = $row['item'];
				$ret[$i]->Suppliers = json_decode($row['suppliers']);
				$ret[$i]->Pixel = json_decode($row['pixel']);
				$ret[$i]->Quotation = $row['quotation'];
				$ret[$i]->Quantity = $row['quantity'];
				$i++;
			}
			return $ret;
		}

        public function attachQuotation($quoteid)
        {
            $db = $this->subscriber->GetDB();
            $id = $this->Id;
            $this->Quotation = $quoteid;
            $db->query("UPDATE quotationitem SET quotation='$quoteid' WHERE quotationitemid='$id'");
            $db->close();
        }

        public function inSuppliers($supplier)
        {
            $id = is_a($supplier, "Supplier") ? $supplier->Id : $supplier;

            for($i = 0; $i < count($this->Suppliers); $i++)
            {
                if(is_a($this->Suppliers[$i], "Supplier"))
                {
                    if($this->Suppliers[$i]->Id == $id)
                    {
                        return true;
                    }
                }
                else if($this->Suppliers[$i] == $id)
                {
                    return  true;
                }
            }
            return false;
        }

        public function addPrice($suplier, $price)
        {
            $sup = is_a($suplier, "Supplier") ? $suplier->Id : $suplier;

            for($i = 0; $i < count($this->Pixel); $i++)
            {
                if(is_a($this->Pixel[$i]->Supplier, "Supplier"))
                {
                    if($this->Pixel[$i]->Supplier->Id == $sup)
                    {
                        $this->Pixel[$i]->Price = doubleval($price);
                    }
                }
                else
                {
                    if($this->Pixel[$i]->Supplier == $sup)
                    {
                        $this->Pixel[$i]->Price = doubleval($price);
                    }
                }
            }
        }
	}
