<?php
	/* Generated by Wixnit Class Builder 
	// Jan, 15/2020
	// Building class for Reviewitem
	*/

	class Reviewitem
	{
		public $Id = "";
		public $Created = 0;
		public $Question = "";
		public $Type = "";
		public $Reviewid = "";
		public $Maxrating = 0;
		public $Sort = 0;
		public $Comment = "";
		public $Options = array();

		public $Rated = [];
		public $Ratedtotal = 0;
		public $Ratinglist = [];
		public $Commentlist = [];

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
            {
            $this->subscriber = $subscriber;
		}


		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM reviewitem WHERE reviewitemid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['reviewitemid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Question = $row['question'];
                    $this->Type = $row['type'];
                    $this->Reviewid = $row['reviewid'];
                    $this->Maxrating = $row['maxrating'];
                    $this->Sort = $row['sort'];
                    $this->Comment = $row['comment'];
                    $this->Options = json_decode($row['options']);
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$question = addslashes($this->Question);
			$type = addslashes($this->Type);
			$reviewid = addslashes($this->Reviewid);
			$maxrating = Convert::ToInt($this->Maxrating);
			$sort = Convert::ToInt($this->Sort);
			$comment = addslashes($this->Comment);
			$options = addslashes(json_encode($this->Options));

			if($res = $db->query("SELECT reviewitemid FROM reviewitem WHERE reviewitemid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE reviewitem SET question='$question',type='$type',reviewid='$reviewid',maxrating='$maxrating',sort='$sort',comment='$comment',options='$options' WHERE reviewitemid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT reviewitemid FROM reviewitem WHERE reviewitemid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO reviewitem(reviewitemid,created,question,type,reviewid,maxrating,sort,comment,options) VALUES ('$id','$created','$question','$type','$reviewid','$maxrating','$sort','$comment','$options')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM reviewitem WHERE reviewitemid='$id'");

			Reviewresponse::Deleteresponse($this->subscriber, $this);
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewitem WHERE question LIKE '%$term%' OR type LIKE '%$term%' OR reviewid LIKE '%$term%' OR maxrating LIKE '%$term%' OR sort LIKE '%$term%' OR comment LIKE '%$term%' OR options LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Reviewitem($subscriber);
                $ret[$i]->Id = $row['reviewitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Question = $row['question'];
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->Maxrating = $row['maxrating'];
                $ret[$i]->Sort = $row['sort'];
                $ret[$i]->Comment = $row['comment'];
                $ret[$i]->Options = json_decode($row['options']);
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='reviewitemid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewitem WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Reviewitem($subscriber);
                $ret[$i]->Id = $row['reviewitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Question = $row['question'];
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->Maxrating = $row['maxrating'];
                $ret[$i]->Sort = $row['sort'];
                $ret[$i]->Comment = $row['comment'];
                $ret[$i]->Options = json_decode($row['options']);
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewitem ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Reviewitem($subscriber);
                $ret[$i]->Id = $row['reviewitemid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Question = $row['question'];
                $ret[$i]->Type = $row['type'];
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->Maxrating = $row['maxrating'];
                $ret[$i]->Sort = $row['sort'];
                $ret[$i]->Comment = $row['comment'];
                $ret[$i]->Options = json_decode($row['options']);
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewitem");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Reviewitem($subscriber);
				$ret[$i]->Id = $row['reviewitemid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Question = $row['question'];
				$ret[$i]->Type = $row['type'];
				$ret[$i]->Reviewid = $row['reviewid'];
				$ret[$i]->Maxrating = $row['maxrating'];
				$ret[$i]->Sort = $row['sort'];
				$ret[$i]->Comment = $row['comment'];
				$ret[$i]->Options = json_decode($row['options']);
				$i++;
			}
			return $ret;
		}


		public function InitResponse()
        {
            $db = $this->subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM reviewresponse WHERE itemid='$this->Id'");

            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Reviewresponse($this->subscriber);
                $ret[$i]->Id = $row['reviewresponseid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Itemid = $row['itemid'];
                $ret[$i]->Type = $row['type'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->Rating = $row['rating'];
                $ret[$i]->Comment = $row['comment'];
                $ret[$i]->Options = json_decode($row['options']);
                $ret[$i]->Responsedate = new WixDate($row['responsedate']);
                $i++;
            }



            if($this->Type == "star-rating")
            {
                $this->Rated = array_fill(0, $this->Maxrating, 0);

                for($i = 0; $i < count($ret); $i++)
                {
                    $this->Rated[(Convert::ToInt($ret[$i]->Rating) - 1)] ++;
                    $this->Ratedtotal++;
                }
            }
            if($this->Type == "heart-rating")
            {
                $this->Rated = array_fill(0, $this->Maxrating, 0);

                for($i = 0; $i < count($ret); $i++)
                {
                    $this->Rated[(Convert::ToInt($ret[$i]->Rating) - 1)] ++;
                    $this->Ratedtotal++;
                }
            }
            if($this->Type == "single-select")
            {
                $this->Rated = array();
                for($i = 0; $i < count($this->Options); $i++)
                {
                    $this->Rated[$this->Options[$i]] = 0;
                }

                for($i = 0; $i < count($ret); $i++)
                {
                    if(isset($ret[$i]->Options[0]))
                    {
                        $this->Rated[$ret[$i]->Options[0]]++;
                        $this->Ratedtotal++;
                    }
                }
            }
            if($this->Type == "comment-box")
            {
                for($i = 0; $i < count($ret); $i++)
                {
                    array_push($this->Commentlist, $ret[$i]->Comment);
                }
            }
            if($this->Type == "multiple-select")
            {
                $this->Rated = array();
                for($i = 0; $i < count($this->Options); $i++)
                {
                    $this->Rated[$this->Options[$i]] = 0;
                }

                for($i = 0; $i < count($ret); $i++)
                {
                    for($j = 0; $j < count($ret[$i]->Options); $j++)
                    {
                        if(isset($ret[$i]->Options[$j]))
                        {
                            $this->Rated[$ret[$i]->Options[$j]]++;
                            $this->Ratedtotal++;
                        }
                    }
                }
            }
        }
	}
