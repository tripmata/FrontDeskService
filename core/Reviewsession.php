<?php
	/* Generated by Wixnit Class Builder 
	// Jan, 15/2020
	// Building class for Reviewsession
	*/

	class Reviewsession
	{
		public $Id = "";
		public $Created = 0;
		public $Reviewid = "";
		public $User = "";
		public $Responded = false;
		public $Responsedate = 0;
		public $Responsechannel = "";

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
            $this->subscriber = $subscriber;
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM reviewsession WHERE reviewsessionid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['reviewsessionid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Reviewid = $row['reviewid'];
                    $this->User = $row['user'];
                    $this->Responded = Convert::ToBool($row['responded']);
                    $this->Responsedate = new WixDate($row['responsedate']);
                    $this->Responsechannel = $row['responsechannel'];
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$reviewid = addslashes($this->Reviewid);
			$user = addslashes($this->User);
			$responded = Convert::ToInt($this->Responded);
			$responsedate = Convert::ToInt(is_a($this->Responsedate, "WixDate") ? $this->Responsedate->getValue() : $this->Responsedate);
			$responsechannel = addslashes($this->Responsechannel);

			if($res = $db->query("SELECT reviewsessionid FROM reviewsession WHERE reviewsessionid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE reviewsession SET reviewid='$reviewid',user='$user',responded='$responded',responsedate='$responsedate',responsechannel='$responsechannel' WHERE reviewsessionid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT reviewsessionid FROM reviewsession WHERE reviewsessionid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO reviewsession(reviewsessionid,created,reviewid,user,responded,responsedate,responsechannel) VALUES ('$id','$created','$reviewid','$user','$responded','$responsedate','$responsechannel')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM reviewsession WHERE reviewsessionid='$id'");
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewsession WHERE reviewid LIKE '%$term%' OR user LIKE '%$term%' OR responded LIKE '%$term%' OR responsedate LIKE '%$term%' OR responsechannel LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Reviewsession($subscriber);
                $ret[$i]->Id = $row['reviewsessionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Responded = Convert::ToBool($row['responded']);
                $ret[$i]->Responsedate = $row['responsedate'];
                $ret[$i]->Responsechannel = $row['responsechannel'];
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='reviewsessionid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewsession WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Reviewsession($subscriber);
                $ret[$i]->Id = $row['reviewsessionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Responded = Convert::ToBool($row['responded']);
                $ret[$i]->Responsedate = $row['responsedate'];
                $ret[$i]->Responsechannel = $row['responsechannel'];
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewsession ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Reviewsession($subscriber);
                $ret[$i]->Id = $row['reviewsessionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Responded = Convert::ToBool($row['responded']);
                $ret[$i]->Responsedate = $row['responsedate'];
                $ret[$i]->Responsechannel = $row['responsechannel'];
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM reviewsession");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Reviewsession($subscriber);
				$ret[$i]->Id = $row['reviewsessionid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Reviewid = $row['reviewid'];
				$ret[$i]->User = $row['user'];
				$ret[$i]->Responded = Convert::ToBool($row['responded']);
				$ret[$i]->Responsedate = $row['responsedate'];
				$ret[$i]->Responsechannel = $row['responsechannel'];
				$i++;
			}
			return $ret;
		}

		//Hand crafted methods

        public static function Responsecount($subscriber, $reviewid=null)
        {
            $db = $subscriber->GetDB();
            if($reviewid != null)
            {
                $ret = $db->query("SELECT * FROM reviewsession WHERE reviewid='$reviewid' AND responded=1")->num_rows;
            }
            else
            {
                $ret = $db->query("SELECT * FROM reviewsession WHERE responded=1")->num_rows;
            }
            $db->close();

            return $ret;
        }
        public static function Sentcount($subscriber, $reviewid=null)
        {
            $db = $subscriber->GetDB();
            if($reviewid != null)
            {
                $ret = $db->query("SELECT * FROM reviewsession WHERE reviewid='$reviewid'")->num_rows;
            }
            else
            {
                $ret = $db->query("SELECT * FROM reviewsession")->num_rows;
            }
            $db->close();
            return $ret;
        }

        public static function Get($subscriber, Review $review, $responded="*")
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $revid = $review->Id;

            if($responded === true)
            {
                $res = $db->query("SELECT * FROM reviewsession WHERE reviewid='$revid' AND responded=1");
            }
            else if($responded === false)
            {
                $res = $db->query("SELECT * FROM reviewsession WHERE reviewid='$revid' AND responded=0");
            }
            else
            {
                $res = $db->query("SELECT * FROM reviewsession WHERE reviewid='$revid'");
            }

            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Reviewsession($subscriber);
                $ret[$i]->Id = $row['reviewsessionid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->User = new Customer($subscriber);
                $ret[$i]->User->Initialize($row['user']);
                $ret[$i]->Responded = Convert::ToBool($row['responded']);
                $ret[$i]->Responsedate = $row['responsedate'];
                $ret[$i]->Responsechannel = $row['responsechannel'];
                $i++;
            }
            return $ret;
        }


        public static function SMSResponses(Subscriber $subscriber, Review $review)
        {
            $db = $subscriber->GetDB();
            $revid = $review->Id;
            $ret = $db->query("SELECT * FROM reviewsession WHERE reviewid='$revid' AND responsechannel='sms' AND responded=1")->num_rows;
            $db->close();
            return $ret;
        }

        public static function EmailResponses(Subscriber $subscriber, Review $review)
        {
            $db = $subscriber->GetDB();
            $revid = $review->Id;
            $ret = $db->query("SELECT * FROM reviewsession WHERE reviewid='$revid' AND responsechannel='email' AND responded=1")->num_rows;
            $db->close();
            return $ret;
        }

        public static function UnknownResponses(Subscriber $subscriber, Review $review)
        {
            $db = $subscriber->GetDB();
            $revid = $review->Id;
            $ret = $db->query("SELECT * FROM reviewsession WHERE reviewid='$revid' AND responsechannel!='email' AND responsechannel!='sms' AND responded=1")->num_rows;
            $db->close();
            return $ret;
        }

        public static function Deletesessions(Subscriber $subscriber, Review $review)
        {
            $id = $review->Id;
            $db = $subscriber->GetDB();
            $db->query("DELETE FROM reviewsession WHERE reviewid='$id'");
        }

        public static function Responseinspan(Subscriber $subscriber, $start=0, $stop=0)
        {
            if($stop == 0){$stop = time();}

            $db = $subscriber->GetDB();
            $ret = $db->query("SELECT id FROM reviewsession WHERE responded=1 AND (responsedate >= '$start' AND responsedate < '$stop')")->num_rows;
            $db->close();
            return $ret;
        }

        public function Getresponses()
        {
            $id = $this->Id;
            $db = $this->subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM reviewresponse WHERE sessionid='$id'");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Reviewresponse($this->subscriber);
                $ret[$i]->Id = $row['reviewresponseid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Itemid = $row['itemid'];
                $ret[$i]->Type = $row['type'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Reviewid = $row['reviewid'];
                $ret[$i]->Rating = $row['rating'];
                $ret[$i]->Comment = $row['comment'];
                $ret[$i]->Options = json_decode($row['options']);
                $ret[$i]->Responsedate = new WixDate($row['responsedate']);
                $ret[$i]->Sessionid = $row['sessionid'];
                $ret[$i]->Item = new Reviewitem($this->subscriber);
                $ret[$i]->Item->Initialize($ret[$i]->Itemid);
                $i++;
            }
            return $ret;
        }
	}
