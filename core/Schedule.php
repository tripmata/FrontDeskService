<?php
	/* Generated by Wixnit Class Builder 
	// Feb, 03/2020
	// Building class for Schedule
	*/

	class Schedule
	{
		public $Id = "";
		public $Created = 0;
		public $Task = "";
		public $Taskclass = "";
		public $Year = 0;
		public $Month = 0;
		public $Day = 0;
		public $Hour = 0;
		public $Min = 0;
		public $Timeinyear = 0;
		public $Autodelete = false;
		public $Execcount = 0;
		public $Executed = 0;
		public $Lastexecution = 0;
		public $Lastexecutioninyear = 0;

		private $subscriber = null;

		function __construct(Subscriber $subscriber)
		{
			$this->subscriber = $subscriber;
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = $this->subscriber->GetDB();

                $res = $db->query("SELECT * FROM schedule WHERE scheduleid='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['scheduleid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Task = $row['task'];
                    $this->Taskclass = $row['taskclass'];
                    $this->Year = $row['year'];
                    $this->Month = $row['month'];
                    $this->Day = $row['day'];
                    $this->Hour = $row['hour'];
                    $this->Min = $row['min'];
                    $this->Timeinyear = $row['timeinyear'];
                    $this->Autodelete = Convert::ToBool($row['autodelete']);
                    $this->Execcount = $row['execcount'];
                    $this->Executed = $row['executed'];
                    $this->Lastexecution = $row['lastexecution'];
                    $this->Lastexecutioninyear = $row['lastexecutioninyear'];
                }
            }
        }

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$task = addslashes($this->Task);
			$taskclass = addslashes($this->Taskclass);
			$year = Convert::ToInt($this->Year);
			$month = Convert::ToInt($this->Month);
			$day = Convert::ToInt($this->Day);
			$hour = Convert::ToInt($this->Hour);
			$min = Convert::ToInt($this->Min);
			$timeinyear = Convert::ToInt($this->Timeinyear);
			$autodelete = Convert::ToInt($this->Autodelete);
			$execcount = Convert::ToInt($this->Execcount);
			$executed = Convert::ToInt($this->Executed);
			$lastexecution = Convert::ToInt($this->Lastexecution);
			$lastexecutioninyear = Convert::ToInt($this->Lastexecutioninyear);

			if($res = $db->query("SELECT scheduleid FROM schedule WHERE scheduleid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE schedule SET task='$task',taskclass='$taskclass',year='$year',month='$month',day='$day',hour='$hour',min='$min',timeinyear='$timeinyear',autodelete='$autodelete',execcount='$execcount',executed='$executed',lastexecution='$lastexecution',lastexecutioninyear='$lastexecutioninyear' WHERE scheduleid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT scheduleid FROM schedule WHERE scheduleid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO schedule(scheduleid,created,task,taskclass,year,month,day,hour,min,timeinyear,autodelete,execcount,executed,lastexecution,lastexecutioninyear) VALUES ('$id','$created','$task','$taskclass','$year','$month','$day','$hour','$min','$timeinyear','$autodelete','$execcount','$executed','$lastexecution','$lastexecutioninyear')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM schedule WHERE scheduleid='$id'");
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM schedule WHERE task LIKE '%$term%' OR taskclass LIKE '%$term%' OR year LIKE '%$term%' OR month LIKE '%$term%' OR day LIKE '%$term%' OR hour LIKE '%$term%' OR min LIKE '%$term%' OR timeinyear LIKE '%$term%' OR autodelete LIKE '%$term%' OR execcount LIKE '%$term%' OR executed LIKE '%$term%' OR lastexecution LIKE '%$term%' OR lastexecutioninyear LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Schedule($subscriber);
                $ret[$i]->Id = $row['scheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Task = $row['task'];
                $ret[$i]->Taskclass = $row['taskclass'];
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Min = $row['min'];
                $ret[$i]->Timeinyear = $row['timeinyear'];
                $ret[$i]->Autodelete = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Lastexecution = $row['lastexecution'];
                $ret[$i]->Lastexecutioninyear = $row['lastexecutioninyear'];
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='scheduleid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM schedule WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Schedule($subscriber);
                $ret[$i]->Id = $row['scheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Task = $row['task'];
                $ret[$i]->Taskclass = $row['taskclass'];
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Min = $row['min'];
                $ret[$i]->Timeinyear = $row['timeinyear'];
                $ret[$i]->Autodelete = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Lastexecution = $row['lastexecution'];
                $ret[$i]->Lastexecutioninyear = $row['lastexecutioninyear'];
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM schedule ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Schedule($subscriber);
                $ret[$i]->Id = $row['scheduleid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Task = $row['task'];
                $ret[$i]->Taskclass = $row['taskclass'];
                $ret[$i]->Year = $row['year'];
                $ret[$i]->Month = $row['month'];
                $ret[$i]->Day = $row['day'];
                $ret[$i]->Hour = $row['hour'];
                $ret[$i]->Min = $row['min'];
                $ret[$i]->Timeinyear = $row['timeinyear'];
                $ret[$i]->Autodelete = Convert::ToBool($row['autodelete']);
                $ret[$i]->Execcount = $row['execcount'];
                $ret[$i]->Executed = $row['executed'];
                $ret[$i]->Lastexecution = $row['lastexecution'];
                $ret[$i]->Lastexecutioninyear = $row['lastexecutioninyear'];
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM schedule");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Schedule($subscriber);
				$ret[$i]->Id = $row['scheduleid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Task = $row['task'];
				$ret[$i]->Taskclass = $row['taskclass'];
				$ret[$i]->Year = $row['year'];
				$ret[$i]->Month = $row['month'];
				$ret[$i]->Day = $row['day'];
				$ret[$i]->Hour = $row['hour'];
				$ret[$i]->Min = $row['min'];
				$ret[$i]->Timeinyear = $row['timeinyear'];
				$ret[$i]->Autodelete = Convert::ToBool($row['autodelete']);
				$ret[$i]->Execcount = $row['execcount'];
				$ret[$i]->Executed = $row['executed'];
				$ret[$i]->Lastexecution = $row['lastexecution'];
				$ret[$i]->Lastexecutioninyear = $row['lastexecutioninyear'];
				$i++;
			}
			return $ret;
		}
	}
