<?php
	/* Generated by Wixnit Class Builder 
	// Mar, 12/2020
	// Building class for Suppliercredit
	*/

	class Suppliercredit
	{
		public $Id = "";
		public $Created = 0;
		public $Reference = "";
		public $Source = "";
		public $User = "";
		public $Items = array();
		public $Total = 0;
		public $Paidamount = 0;
		public $Supplier = "";
		public $Name = "";
		public $Surname = "";
		public $Email = "";
		public $Phone = "";
		public $Address = "";
		public $Hasquantity = false;

		Private $subscriber = null;

		function __construct(Subscriber $subscriber)
        {
            $this->subscriber = $subscriber;
        }

		public function Initialize($arg=null)
		{
			if($arg != null)
			{
				$db = $this->subscriber->GetDB();

				$res = $db->query("SELECT * FROM suppliercredit WHERE suppliercreditid='$arg'");

				if($res->num_rows > 0)
				{
					$row = $res->fetch_assoc();
				
					$this->Id = $row['suppliercreditid'];
					$this->Created = new WixDate($row['created']);
					$this->Reference = $row['reference'];
					$this->Source = $row['source'];
					$this->User = new User($this->subscriber);
					$this->User->Initialize($row['user']);
					$this->Items = [];

					$it = json_decode($row['items']);
					for($i = 0; $i < count($it); $i++)
                    {
                        if($it[$i] != "")
                        {
                            array_push($this->Items, new Itempixel($it[$i]));
                        }
                    }

					$this->Total = doubleval($row['total']);
					$this->Paidamount = doubleval($row['paidamount']);
					$this->Supplier = new Supplier($this->subscriber);
					$this->Supplier->Initialize($row['supplier']);
					$this->Name = $row['name'];
					$this->Surname = $row['surname'];
					$this->Email = $row['email'];
					$this->Phone = $row['phone'];
					$this->Address = $row['address'];
					$this->Hasquantity = Convert::ToBool($row['hasquantity']);
				}
			}
		}

		public function Save()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$created = time();
			$reference = addslashes($this->Reference);
			$source = addslashes($this->Source);
			$user = addslashes(is_a($this->User, "User") ? $this->User->Id : $this->User);
			$items = addslashes(json_encode($this->Items));
			$total = floatval($this->Total);
			$paidamount = floatval($this->Paidamount);
			$supplier = addslashes(is_a($this->Supplier, "Supplier") ? $this->Supplier->Id : $this->Supplier);
			$name = addslashes($this->Name);
			$surname = addslashes($this->Surname);
			$email = addslashes($this->Email);
			$phone = addslashes($this->Phone);
			$address = addslashes($this->Address);
			$hasquantity = Convert::ToInt($this->Hasquantity);

			if($res = $db->query("SELECT suppliercreditid FROM suppliercredit WHERE suppliercreditid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE suppliercredit SET reference='$reference',source='$source',user='$user',items='$items',total='$total',paidamount='$paidamount',supplier='$supplier',name='$name',surname='$surname',email='$email',phone='$phone',address='$address',hasquantity='$hasquantity' WHERE suppliercreditid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT suppliercreditid FROM suppliercredit WHERE suppliercreditid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO suppliercredit(suppliercreditid,created,reference,source,user,items,total,paidamount,supplier,name,surname,email,phone,address,hasquantity) VALUES ('$id','$created','$reference','$source','$user','$items','$total','$paidamount','$supplier','$name','$surname','$email','$phone','$address','$hasquantity')");
			}
		}

		public function Delete()
		{
			$db = $this->subscriber->GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM suppliercredit WHERE suppliercreditid='$id'");

			//Deleting Associated Objects
			/*n			$this->User->Delete();

			$this->Items->Delete();

			$this->Supplier->Delete();
			*/
		}

		public static function Search(Subscriber $subscriber, $term='')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM suppliercredit WHERE reference LIKE '%$term%' OR source LIKE '%$term%' OR user LIKE '%$term%' OR items LIKE '%$term%' OR total LIKE '%$term%' OR paidamount LIKE '%$term%' OR supplier LIKE '%$term%' OR name LIKE '%$term%' OR surname LIKE '%$term%' OR email LIKE '%$term%' OR phone LIKE '%$term%' OR address LIKE '%$term%' OR hasquantity LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Suppliercredit($subscriber);
                $ret[$i]->Id = $row['suppliercreditid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reference = $row['reference'];
                $ret[$i]->Source = $row['source'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Supplier = $row['supplier'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Surname = $row['surname'];
                $ret[$i]->Email = $row['email'];
                $ret[$i]->Phone = $row['phone'];
                $ret[$i]->Address = $row['address'];
                $ret[$i]->Hasquantity = Convert::ToBool($row['hasquantity']);
				$i++;
			}
			return $ret;
		}

		public static function Filter(Subscriber $subscriber, $term='', $field='suppliercreditid')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM suppliercredit WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Suppliercredit($subscriber);
                $ret[$i]->Id = $row['suppliercreditid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reference = $row['reference'];
                $ret[$i]->Source = $row['source'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Supplier = $row['supplier'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Surname = $row['surname'];
                $ret[$i]->Email = $row['email'];
                $ret[$i]->Phone = $row['phone'];
                $ret[$i]->Address = $row['address'];
                $ret[$i]->Hasquantity = Convert::ToBool($row['hasquantity']);
				$i++;
			}
			return $ret;
		}

		public static function Order(Subscriber $subscriber, $field='id', $order='DESC')
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM suppliercredit ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new Suppliercredit($subscriber);
                $ret[$i]->Id = $row['suppliercreditid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reference = $row['reference'];
                $ret[$i]->Source = $row['source'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Supplier = $row['supplier'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Surname = $row['surname'];
                $ret[$i]->Email = $row['email'];
                $ret[$i]->Phone = $row['phone'];
                $ret[$i]->Address = $row['address'];
                $ret[$i]->Hasquantity = Convert::ToBool($row['hasquantity']);
				$i++;
			}
			return $ret;
		}

		public static function All(Subscriber $subscriber)
		{
			$db = $subscriber->GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM suppliercredit");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new Suppliercredit($subscriber);
				$ret[$i]->Id = $row['suppliercreditid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Reference = $row['reference'];
				$ret[$i]->Source = $row['source'];
				$ret[$i]->User = $row['user'];
				$ret[$i]->Items = json_decode($row['items']);
				$ret[$i]->Total = $row['total'];
				$ret[$i]->Paidamount = $row['paidamount'];
				$ret[$i]->Supplier = $row['supplier'];
				$ret[$i]->Name = $row['name'];
				$ret[$i]->Surname = $row['surname'];
				$ret[$i]->Email = $row['email'];
				$ret[$i]->Phone = $row['phone'];
				$ret[$i]->Address = $row['address'];
				$ret[$i]->Hasquantity = Convert::ToBool($row['hasquantity']);
				$i++;
			}
			return $ret;
		}

        public static function ByReference(Subscriber $subscriber, $reference)
        {
            $db = $subscriber->GetDB();
            $ret = array();
            $i = 0;

            $res = $db->query("SELECT * FROM suppliercredit");
            while(($row = $res->fetch_assoc()) != null)
            {
                $ret[$i] = new Suppliercredit($subscriber);
                $ret[$i]->Id = $row['suppliercreditid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Reference = $row['reference'];
                $ret[$i]->Source = $row['source'];
                $ret[$i]->User = $row['user'];
                $ret[$i]->Items = json_decode($row['items']);
                $ret[$i]->Total = $row['total'];
                $ret[$i]->Paidamount = $row['paidamount'];
                $ret[$i]->Supplier = $row['supplier'];
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Surname = $row['surname'];
                $ret[$i]->Email = $row['email'];
                $ret[$i]->Phone = $row['phone'];
                $ret[$i]->Address = $row['address'];
                $ret[$i]->Hasquantity = Convert::ToBool($row['hasquantity']);
                $i++;
            }
            return $ret;
        }
	}
