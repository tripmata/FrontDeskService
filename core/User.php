<?php
	/* Generated by Wixnit Class Builder 
	// Aug, 28/2019
	// Building class for User
	*/

	class User
	{
		public $Id = "";
		public $Created = 0;
		public $Name = "";
		public $Surname = "";
		public $Staffid = "";
		public $Username = "";
		private $Password = "";
		public $Lastseen = 0;
		public $Type = "";
		public $Property = null;

        /**
         * @var Role
         */
		public $Role = "";
		public $Status = false;

		private $subscriber = null;

		function __construct($arg=null)
		{
		    if(is_a($arg, "Subscriber"))
            {
                $this->subscriber = $arg;
            }
		    else
            {
                $this->Initialize($arg);
            }
		}

		public function Initialize($arg=null)
        {
            if($arg != null)
            {
                $db = DB::GetDB();

                $res = $db->query("SELECT * FROM user WHERE userid='$arg' OR username='$arg'");

                if($res->num_rows > 0)
                {
                    $row = $res->fetch_assoc();

                    $this->Id = $row['userid'];
                    $this->Created = new WixDate($row['created']);
                    $this->Name = $row['name'];
                    $this->Surname = $row['surname'];
                    $this->Staffid = $row['staffid'];
                    $this->Username = $row['username'];
                    $this->Password = $row['password'];
                    $this->Role = new Role(new Subscriber());
                    $this->Role->Initialize($row['role']);
                    $this->Status = Convert::ToBool($row['status']);
                    $this->Lastseen = new WixDate($row['lastseen']);
                    $this->Type = "staff";
                    $this->Property = new Property($row['property']);
                }
                else
                {
                    if($arg == "adxc0")
                    {
                        $this->Id = $arg;
                        $this->Created = new WixDate();
                        $this->Name = "Main";
                        $this->Surname = "Admin";
                        $this->Staffid = $arg;
                        $this->Username = "";
                        $this->Password = "";
                        $this->Status = true;
                        $this->Lastseen = time();
                        $this->Type = "super admin";


                        $this->Role = new Role();
                        $this->Role->Initialize();

                        $this->Role->Booking->ReadAccess = true;
                        $this->Role->Discount->ReadAccess = true;
                        $this->Role->Customers->ReadAccess = true;
                        $this->Role->Staff->ReadAccess = true;
                        $this->Role->Rooms->ReadAccess = true;
                        $this->Role->Kitchen->ReadAccess = true;
                        $this->Role->Bakery->ReadAccess = true;
                        $this->Role->Bar->ReadAccess = true;
                        $this->Role->Laundry->ReadAccess = true;
                        $this->Role->Housekeeping->ReadAccess = true;
                        $this->Role->Pool->ReadAccess = true;
                        $this->Role->Store->ReadAccess = true;
                        $this->Role->Event->ReadAccess = true;
                        $this->Role->Finance->ReadAccess = true;
                        $this->Role->Branch->ReadAccess = true;
                        $this->Role->Log->ReadAccess = true;
                        $this->Role->Report->ReadAccess = true;
                        $this->Role->Messaging->ReadAccess = true;
                        $this->Role->Webfront->ReadAccess = true;
                        $this->Role->Webconfig->ReadAccess = true;
                        $this->Role->Settings->ReadAccess = true;
                        $this->Role->Frontdesk->ReadAccess = true;
                        $this->Role->Kitchenpos->ReadAccess = true;
                        $this->Role->Laundrypos->ReadAccess = true;
                        $this->Role->Bakerypos->ReadAccess = true;
                        $this->Role->Poolpos->ReadAccess = true;
                        $this->Role->Barpos->ReadAccess = true;



                        $this->Role->Booking->WriteAccess = true;
                        $this->Role->Discount->WriteAccess = true;
                        $this->Role->Customers->WriteAccess = true;
                        $this->Role->Staff->WriteAccess = true;
                        $this->Role->Rooms->WriteAccess = true;
                        $this->Role->Kitchen->WriteAccess = true;
                        $this->Role->Bakery->WriteAccess = true;
                        $this->Role->Bar->WriteAccess = true;
                        $this->Role->Laundry->WriteAccess = true;
                        $this->Role->Housekeeping->WriteAccess = true;
                        $this->Role->Pool->WriteAccess = true;
                        $this->Role->Store->WriteAccess = true;
                        $this->Role->Event->WriteAccess = true;
                        $this->Role->Finance->WriteAccess = true;
                        $this->Role->Branch->WriteAccess = true;
                        $this->Role->Log->WriteAccess = true;
                        $this->Role->Report->WriteAccess = true;
                        $this->Role->Messaging->WriteAccess = true;
                        $this->Role->Webfront->WriteAccess = true;
                        $this->Role->Webconfig->WriteAccess = true;
                        $this->Role->Settings->WriteAccess = true;
                        $this->Role->Name = "";


                        //System variables
                        $this->Role->System = false;

                        $this->Role->Frontdesk->WriteAccess = true;
                        $this->Role->Kitchenpos->WriteAccess = true;
                        $this->Role->Laundrypos->WriteAccess = true;
                        $this->Role->Bakerypos->WriteAccess = true;
                        $this->Role->Poolpos->WriteAccess = true;
                        $this->Role->Barpos->WriteAccess = true;
                    }
                }
            }
        }

		public function Save()
		{
			$db = DB::GetDB();

			$id = $this->Id;
			$created = time();
			$name = addslashes($this->Name);
			$surname = addslashes($this->Surname);
			$staffid = addslashes($this->Staffid);
			$username = addslashes($this->Username);
			$password = addslashes($this->Password);
			$role = addslashes(is_a($this->Role, "Role") ? $this->Role->Id : $this->Role);
			$status = Convert::ToInt($this->Status);
			$lastseen = Convert::ToInt($this->Lastseen);
			$property = is_a($this->Property, "Property") ? $this->Property->Id : $this->Property;

			if($res = $db->query("SELECT userid FROM user WHERE userid='$id'")->num_rows > 0)
			{
				$db->query("UPDATE user SET name='$name',surname='$surname',staffid='$staffid',username='$username',password='$password',role='$role',status='$status',lastseen='$lastseen',property='$property' WHERE userid = '$id'");
			}
			else
			{
				redo: ;
				$id = Random::GenerateId(16);
				if($db->query("SELECT userid FROM user WHERE userid='$id'")->num_rows > 0)
				{
					goto redo;
				}
				$this->Id = $id;
				$db->query("INSERT INTO user(userid,created,name,surname,staffid,username,password,role,status,lastseen,property) VALUES ('$id','$created','$name','$surname','$staffid','$username','$password','$role','$status','$lastseen','$property')");
			}
		}

		public function Delete()
		{
			$db = DB::GetDB();

			$id = $this->Id;
			$db->query("DELETE FROM user WHERE userid='$id'");

			//Deleting Associated Objects
			/*n			$this->Role->Delete();
			*/
		}

		public static function Search($subscriber='', $term='')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$term = is_a($subscriber, "Subscriber") ? $term : $subscriber;

			$res = $db->query("SELECT * FROM user WHERE name LIKE '%$term%' OR surname LIKE '%$term%' OR username LIKE '%$term%'");
			while(($row = $res->fetch_assoc()) != null)
			{
                $ret[$i] = new User();
                $ret[$i]->Id = $row['userid'];
                $ret[$i]->Created = new WixDate($row['created']);
                $ret[$i]->Name = $row['name'];
                $ret[$i]->Surname = $row['surname'];
                $ret[$i]->Staffid = $row['staffid'];
                $ret[$i]->Username = $row['username'];
                $ret[$i]->Password = $row['password'];
                $ret[$i]->Role = new Role();
                $ret[$i]->Role->Initialize($row['role']);
                $ret[$i]->Status = Convert::ToBool($row['status']);
                $ret[$i]->Lastseen = new WixDate($row['lastseen']);
                $ret[$i]->Property = $row['property'];
                $i++;
			}
			return $ret;
		}

		public static function Filter($term='', $field='userid')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT userid FROM user WHERE ".$field." ='$term'");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new User($row['userid']);
				$i++;
			}
			return $ret;
		}

		public static function Order($field='id', $order='DESC')
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT userid FROM user ORDER BY ".$field." ".$order."");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new User($row['userid']);
				$i++;
			}
			return $ret;
		}

		public static function All()
		{
			$db = DB::GetDB();
			$ret = array();
			$i = 0;

			$res = $db->query("SELECT * FROM user");
			while(($row = $res->fetch_assoc()) != null)
			{
				$ret[$i] = new User($GLOBALS['subscriber']);
				$ret[$i]->Id = $row['userid'];
				$ret[$i]->Created = new WixDate($row['created']);
				$ret[$i]->Name = $row['name'];
				$ret[$i]->Surname = $row['surname'];
				$ret[$i]->Staffid = $row['staffid'];
				$ret[$i]->Username = $row['username'];
				$ret[$i]->Password = $row['password'];
                $ret[$i]->Role = new Role();
                $ret[$i]->Role->Initialize($row['role']);
				$ret[$i]->Status = Convert::ToBool($row['status']);
                $ret[$i]->Lastseen = new WixDate($row['lastseen']);
                $ret[$i]->Property = $row['property'];
				$i++;
			}
			return $ret;
		}

		public function GetRole()
		{
			return $this->Role;
		}

		public function SetRole($role)
		{
			//Presuming Object has a Save Method
			/*
			if(is_a($role, "Role"))
			{
				$role->Save();
			}
			*/
			$this->Role = is_a($role, "Role") ? $role->Id : $role;
		}

		public function Exist($arg)
        {
            $db = DB::GetDB();
            return $db->query("SELECT * FROM user WHERE username='$arg'")->num_rows > 0 ? true : false;
        }

        public function isPassword($password)
        {
            $pass = md5($password);
            $db = DB::GetDB();
            $id = $this->Id;
            $res = $db->query("SELECT password FROM user WHERE userid='$id'");
            if($res->num_rows > 0)
            {
                $rows = $res->fetch_assoc();
                if($pass == $rows['password'])
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            else
            {
                return false;
            }
        }
		
		public function Updatepassword($password)
		{
			$pass = md5($password);
			$db = DB::GetDB();
            $id = $this->Id;
            $res = $db->query("UPDATE user SET password='$pass' WHERE userid='$id'");
            return true;
		}

		public function setPassword($pass)
        {
            $this->Password = md5($pass);
        }

        public function UpdateSeenTime()
        {
            $db = DB::GetDB();
            $id = $this->Id;
            $tm = time();

            $db->query("UPDATE user SET lastseen='$tm' WHERE userid='$id'");
        }

        public static function ByRole(Subscriber $subscriber, $role)
        {
            $ret = [];

            $users = User::All($subscriber);

            for($i = 0; $i < count($users); $i++)
            {
                if($role == Role::KitchenPOS)
                {
                    if($users[$i]->Role->Kitchenpos->WriteAccess)
                    {
                        array_push($ret, $users[$i]);
                    }
                }
                if($role == Role::BakeryPOS)
                {
                    if($users[$i]->Role->Bakerypos->WriteAccess)
                    {
                        array_push($ret, $users[$i]);
                    }
                }
                if($role == Role::BarPOS)
                {
                    if($users[$i]->Role->Barpos->WriteAccess)
                    {
                        array_push($ret, $users[$i]);
                    }
                }
                if($role == Role::LaundryPOS)
                {
                    if($users[$i]->Role->Laundrypos->WriteAccess)
                    {
                        array_push($ret, $users[$i]);
                    }
                }
                if($role == Role::PoolPOS)
                {
                    if($users[$i]->Role->Poolpos->WriteAccess)
                    {
                        array_push($ret, $users[$i]);
                    }
                }
                if($role == Role::FrontDesk)
                {
                    if($users[$i]->Role->Frontdesk->WriteAccess)
                    {
                        array_push($ret, $users[$i]);
                    }
                }
            }
            return $ret;
        }

        public static function isSuperAdmin($user, $password)
        {
            $ret = false;

            $db = DB::GetDB();

            $pass = md5($password);

            $res = $db->query("SELECT * FROM system WHERE email='$user' AND password='$pass'");
            if($res->num_rows > 0)
            {
                $ret = true;
            }
            $db->close();
            return $ret;
        }

        public static function GetUser($username)
        {
            $db = DB::GetDB();
            $ret = null;

            $res = $db->query("SELECT * FROM user WHERE username='$username'");
            if($res->num_rows > 0)
            {
                $row = $res->fetch_assoc();

                $ret = new User();
                $ret->Id = $row['userid'];
                $ret->Created = new WixDate($row['created']);
                $ret->Name = $row['name'];
                $ret->Surname = $row['surname'];
                $ret->Staffid = $row['staffid'];
                $ret->Username = $row['username'];
                $ret->Password = $row['password'];
                $ret->Role = new Role(new Subscriber());
                $ret->Role->Initialize($row['role']);
                $ret->Status = Convert::ToBool($row['status']);
                $ret->Lastseen = new WixDate($row['lastseen']);
                $ret->Property = new Property($row['property']);
            }
            return $ret;
        }
	}
